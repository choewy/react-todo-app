{"version":3,"sources":["components/Common/Footer.js","util/storage.js","context/AuthContext.js","components/Common/Navbar.js","components/Common/Header.js","components/Common/Home.js","components/Common/Page404.js","components/Auth/FindPassword.js","util/encode.js","util/expression.js","util/google.sheets.js","components/Common/Spinner.js","components/Auth/LoginHeader.js","components/Auth/LoginTemplate.js","components/Auth/SignupHeader.js","components/Auth/SignupTemplate.js","routes/AuthRoute.js","context/TodoContext.js","components/Group/GroupAppend.js","components/Group/GroupHeader.js","components/Group/GroupItem.js","components/Group/GroupList.js","components/Group/GroupNotFound.js","components/Group/GroupTemplate.js","components/Todo/TodoAppend.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Todo/TodoNotFound.js","components/Todo/TodoHeader.js","components/Todo/TodoTemplate.js","routes/TodoRoute.js","App.js","index.js"],"names":["FooterWrapper","styled","div","Footer","AUTH_KEY","AUTO_SAVE","stringfy","object","JSON","stringify","parse","string","setLocalAuth","auth","localStorage","setItem","initAuth","getItem","Reducer","state","action","type","check","email","removeItem","Error","AuthStateContext","createContext","AuthDispatchContext","AuthProvider","children","useReducer","dispatch","Provider","value","useAuthState","useContext","useAuthDispatch","NavbarList","ul","NavbarItem","li","NavbarLink","Link","Navbar","to","onClick","HeaderBackground","HeaderWrapper","HeaderTitle","Header","Wrapper","BodyWrapper","Home","className","dangerouslySetInnerHTML","__html","Description","Page404","FindPassword","encodingPassword","salt","password","Promise","resolve","reject","pbkdf2","ENCODE_CONFIG","ITER","LENGTH","DIGEST","error","key","_password","toString","STRING_TYPE","encodingAuthor","author","_author","EMAIL_EXP","PASSWORD_EXP","api","doc","GoogleSpreadsheet","API_KEY","GOOGLE_SHEET_ID","sheet","user","todo","header","init","a","useServiceAccountAuth","GOOGLE_CONFIG","loadInfo","getToday","today","Date","getFullYear","getMonth","slice","getDate","getAuthInGoogleSheet","sheetsByTitle","getRows","then","rows","forEach","row","map","catch","appendUserInGoogleSheet","name","uuid","v4","randomBytes","buffer","registDate","addRow","getTodosFromGoogleSheet","groups","group","push","appendGroupInGoogleSheet","todos","editGroupTitleInGoogleSheet","group_id","editTitle","index","_index","id","title","save","removeGroupFromGoogleSheet","delete","appendTodoInGoogleSheet","doneTodoInGoogleSheet","todo_id","done","removeTodoFromGoogleSheet","filter","editTodoTextInGoogleSheet","editText","text","Spinner","color","height","width","LoginHeaderWrapper","LoginHeader","LoginForm","form","LoginLabel","props","css","LoginInput","input","LoginCheck","LoginButtonWrapper","LoginButton","button","LoginOtherButtonsWrapper","LoginTemplate","useState","setEmail","setPassword","setCheck","disable","setDisable","loader","setLoader","emailError","setEmailError","passwordError","setPasswordError","onLogin","event","preventDefault","errors","join","onSubmit","onChange","target","match","disabled","checked","SignupHeaderWrapper","SignupHeader","SignupForm","SignupLabel","SignupInput","SignupButtonWrapper","SignupButton","SignupTemplate","setName","firstPassword","setFirstPassword","lastPassword","setLastPassword","nameError","setNameError","firstPasswordError","setFirstPasswordError","lastPasswordError","setLastPasswordError","onSignup","AuthRoute","exact","path","component","initTodos","concat","splice","TodoStateContext","TodoDispatchContext","TodoProvider","useTodoState","context","useTodoDispatch","GroupAppendForm","GroupAppendInput","GroupAppendButton","open","GroupAppend","setTitle","setOpen","onAppend","console","log","autoFocus","placeholder","GroupHeaderWrapper","GroupHeader","GroupButtonWrapper","RemoveButton","EditButton","SaveButton","CancelButton","GroupItemWapper","GroupText","GroupLink","GroupForm","GroupInput","GroupItem","setEditTitle","editable","setEditable","onRemove","onSave","memo","GroupListWrapper","GroupList","GroupNotFound","GroupTemplate","undefined","TodoAppendForm","TodoAppendInput","TodoAppendButton","TodoAppend","setText","TodoButtonWrapper","TodoItemWapper","TodoCheckBoxWrapper","TodoCheckBox","TodoText","TodoForm","TodoInput","TodoItem","setEditText","checking","setChecking","onDone","TodoListWrapper","TodoList","TodoNotFound","TodoHeaderWrapper","TodoBackLink","TodoHeader","TodoTemplate","location","queryString","search","SpinnerWrapper","TodoRoute","useEffect","Init","GlobalStyle","createGlobalStyle","Container","main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.201c2f5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterWrapper = styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    margin-top: auto;\r\n    padding: 50px 0;\r\n    font-size: 15px;\r\n    text-align: center;\r\n    line-height: 1.5;\r\n    \r\n    @media (max-width: 768px) {\r\n        font-size: 13px;\r\n    }\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <p>HYCU 컴퓨터공학과 (H201803138 최원영) 졸업작품 😎</p>\r\n        </FooterWrapper>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","const AUTH_KEY = \"react-todo-app-auth\";\r\nconst AUTO_SAVE = \"react-todo-app-save\"\r\n\r\nconst stringfy = (object) => {\r\n    return JSON.stringify(object);\r\n}\r\n\r\nconst parse = (string) => {\r\n    return JSON.parse(string);\r\n}\r\n\r\nexport const getLocalAuth = () => {\r\n    return parse(localStorage.getItem(AUTH_KEY));\r\n}\r\n\r\nexport const setLocalAuth = (auth) => {\r\n    localStorage.setItem(AUTH_KEY, (stringfy(auth)));\r\n    return auth;\r\n}\r\n\r\nexport const removeLocalAuth = () => {\r\n    localStorage.removeItem(AUTH_KEY);\r\n    return null;\r\n}\r\n\r\nexport const setLocalSave = (email) => {\r\n    localStorage.setItem(AUTO_SAVE, stringfy(email));\r\n    return email;\r\n}\r\n\r\nexport const getLocalSave = () => {\r\n    return parse(localStorage.getItem(AUTO_SAVE));\r\n}\r\n\r\nexport const removeLocalSave = () => {\r\n    localStorage.removeItem(AUTO_SAVE);\r\n    return null;\r\n}","import React, { createContext, useContext, useReducer } from 'react';\r\nimport { getLocalAuth, removeLocalAuth, removeLocalSave, setLocalAuth, setLocalSave } from '../util/storage';\r\n\r\nconst initAuth = getLocalAuth();\r\n\r\nfunction Reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_LOGIN\":\r\n            setLocalAuth(action.auth);\r\n            if (action.check) setLocalSave(action.auth.email)\r\n            else removeLocalSave();\r\n            return action.auth;\r\n\r\n        case \"AUTH_SIGNUP\":\r\n            setLocalAuth(action.auth);\r\n            return action.auth;\r\n\r\n        case \"AUTH_LOGOUT\":\r\n            removeLocalAuth();\r\n            return null;\r\n\r\n        case \"AUTH_REMOVE\":\r\n            // {uuid, }\r\n            return state;\r\n\r\n        case \"AUTH_CHANGE\":\r\n            // {uuid, auth}\r\n            return state;\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n}\r\n\r\nconst AuthStateContext = createContext();\r\nconst AuthDispatchContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [state, dispatch] = useReducer(Reducer, initAuth);\r\n    return (\r\n        <AuthStateContext.Provider value={state}>\r\n            <AuthDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </AuthDispatchContext.Provider>\r\n        </AuthStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuthState = () => {\r\n    return useContext(AuthStateContext);\r\n}\r\n\r\nexport const useAuthDispatch = () => {\r\n    return useContext(AuthDispatchContext);\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\n\r\nconst NavbarList = styled.ul`\r\n    width: 768px;\r\n    list-style-type: none;\r\n    margin-top: 10px;\r\n    padding: 10px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\nconst NavbarItem = styled.li`\r\n    float: left;\r\n`\r\nconst NavbarLink = styled(Link)`\r\n    display: block;\r\n    color: #fff;\r\n    text-decoration: none; \r\n    padding: 0 20px;\r\n    text-align: center;\r\n`\r\n\r\nconst Navbar = ({ auth }) => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const onLogout = () => {\r\n        dispatch({ type: \"AUTH_LOGOUT\" })\r\n    }\r\n\r\n    return (\r\n        <NavbarList>\r\n            <NavbarItem>\r\n                <NavbarLink to=\"/\">홈</NavbarLink>\r\n            </NavbarItem>\r\n            {\r\n                auth === null\r\n                    ? (\r\n                        <>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/auth/login\">로그인</NavbarLink>\r\n                            </NavbarItem>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/auth/signup\">회원가입</NavbarLink>\r\n                            </NavbarItem>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/todo/groups/\">TODO</NavbarLink>\r\n                            </NavbarItem>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/\" onClick={onLogout}>로그아웃</NavbarLink>\r\n                            </NavbarItem>\r\n                        </>\r\n                    )\r\n            }\r\n        </NavbarList>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Navbar from './Navbar';\r\n\r\nconst HeaderBackground = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\r\n    color: #ffffff;\r\n`\r\n\r\nconst HeaderWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 768px;\r\n    height: 150px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        height: 150px;\r\n        padding: 0 20px;\r\n    }\r\n`\r\n\r\nconst HeaderTitle = styled.div`\r\n    margin-top: 15px;\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    @media (max-width: 768px) {\r\n        font-size: 25px;\r\n    }\r\n`\r\nconst Header = ({ auth }) => {\r\n    return (\r\n        <HeaderBackground>\r\n            <HeaderWrapper>\r\n                <HeaderTitle>\r\n                    😎 H201803138\r\n                </HeaderTitle>\r\n                <Navbar auth={auth} />\r\n            </HeaderWrapper>\r\n        </HeaderBackground>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport './Home.css';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        padding: 20px 20px;\r\n        font-size: 14px;\r\n      }\r\n`\r\n\r\nconst HeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    width: 100%;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    \r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n    background: white;\r\n    margin: 0 auto;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n`\r\n\r\nconst contents = `\r\n<h1>1. React</h1>\r\n<ul>\r\n<li>프로젝트 생성 및 실행</li>\r\n</ul>\r\n<pre><code>$ npx create-react-app &lt;APP NAME&gt;\r\n</code></pre>\r\n<ul>\r\n<li>로컬 서버 실행</li>\r\n</ul>\r\n<pre><code>$ cd &lt;APP NAME&gt;\r\n$ npm run start\r\n</code></pre>\r\n<ul>\r\n<li>프로젝트 빌드</li>\r\n</ul>\r\n<pre><code>$ npm run build\r\n</code></pre>\r\n<ul>\r\n<li>기타 라이브러리 설치</li>\r\n</ul>\r\n<pre><code>$ npm install react-router-dom\r\n$ npm install react-icons\r\n$ npm install react-loader-spinner\r\n$ npm install styled-components\r\n$ npm install query-string\r\n</code></pre>\r\n<hr>\r\n<h1>2. Google Sheets API</h1>\r\n<ul>\r\n<li>api key 생성</li>\r\n</ul>\r\n<figure><table>\r\n<thead>\r\n<tr><th>순서</th><th>내용</th></tr></thead>\r\n<tbody><tr><td>1</td><td><a href=\"https://console.cloud.google.com/\">Google Cloud Console</a>에서 프로젝트 생성</td></tr><tr><td>2</td><td>좌측 메뉴 중 [API 및 서비스] → [API 및 서비스 사용 설정]</td></tr><tr><td>2-1.</td><td>Google Sheet 검색 후 API 사용 설정</td></tr><tr><td>3.</td><td>좌측 메뉴 중 [API 및 서비스] → [사용자 인증 정보]</td></tr><tr><td>3-1.</td><td>[사용자 인증 정보 만들기] → [서비스 계정]</td></tr><tr><td>3-2.</td><td>서비스 계정 정보 입력 및 엑세스 권한을 편집자로 설정</td></tr><tr><td>4.</td><td>서비스 계정 목록 중 [생성된 서비스 계정] → [키] → [키 추가] → [새 키 만들기]</td></tr><tr><td>4-1.</td><td>Json 형식으로 키 생성 후 다운로드</td></tr></tbody>\r\n</table></figure>\r\n<ul>\r\n<li>Google Sheets 공유 설정</li>\r\n</ul>\r\n<figure><table>\r\n<thead>\r\n<tr><th>순서</th><th>내용</th></tr></thead>\r\n<tbody><tr><td>1.</td><td>Google Sheets에서 새 문서 생성 후 접속</td></tr><tr><td>2.</td><td>우측 상단의 [공유]</td></tr><tr><td>2-1.</td><td>공개로 설정할 경우 [링크가 있는 모든 사용자]</td></tr><tr><td>2-2.</td><td>비공개로 설정할 경우 [사용자 및 그룹과 공유]에 서비스 계정 메일 주소 추가</td></tr></tbody>\r\n</table></figure>\r\n<ul>\r\n<li>Sheet ID</li>\r\n</ul>\r\n<figure><table>\r\n<thead>\r\n<tr><th>순서</th><th>내용</th></tr></thead>\r\n<tbody><tr><td>1.</td><td>이전에 생성한 Google Sheets 접속</td></tr><tr><td>2.</td><td>URL 중 <code>/d/</code>뒤에 있는 부분이 Sheet ID이므로, 해당 부분을 복사 후 별도로 저장</td></tr></tbody>\r\n</table></figure>\r\n<ul>\r\n<li>라이브러리 설치</li>\r\n</ul>\r\n<pre><code>$ npm install google-spreadsheet\r\n</code></pre>\r\n<ul>\r\n<li>코드 작성</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nconst SHEET_ID = \"&lt;Sheet ID&gt;\";\r\nconst API_KEY = {\r\n    type: \" ... \",\r\n    project_id: \" ... \",\r\n    private_key_id: \" ... \",\r\n    private_key: \" ... \",\r\n    client_email: \" ... \",\r\n    client_id: \" ... \",\r\n    auth_uri: \" ... \",\r\n    token_uri: \" ... \",\r\n    auth_provider_x509_cert_url: \" ... \",\r\n    client_x509_cert_url: \" ... \"\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>GoogleSpreadsheet Promise 생성</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">...\r\nconst sheetInit = () =&gt; \r\n    new Promise(async (resolve, reject) =&gt; {\r\n        const doc = new GoogleSpreadsheet(SHEET_ID);\r\n        await doc.useServiceAccountAuth(API_KEY);\r\n        await doc.loadInfo()\r\n            .then(() =&gt; resolve(doc));\r\n            .catch(error =&gt; reject(error));\r\n    })\r\n</code></pre>\r\n<ul>\r\n<li>특정 시트의 데이터 가져오기</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">const getSheet = async() =&gt; {\r\n    const doc = await sheetInit();\r\n    const sheet = doc.sheetsByTitle[\"&lt;Sheet name&gt;\"];\r\n    await sheet.getRows()\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>특정 시트에 행 추가</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">const appendRow = async(row) =&gt; {\r\n    const doc = await sheetInit();\r\n    const sheet = doc.sheetsByTitle[\"&lt;Sheet name&gt;\"];\r\n    await sheet.addRow(row)\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>특정 행 삭제</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">const removeRow = async(index) =&gt; {\r\n    const doc = await sheetInit();\r\n    const sheet = doc.sheetsByTitle[\"&lt;Sheet name&gt;\"];\r\n    const rows = await sheet.getRows();\r\n    await rows[index].delete();\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>특정 행의 데이터 수정</li>\r\n</ul>\r\n<pre><code class=\"language-javascript\" lang=\"javascript\">const removeRow = async(index, row) =&gt; {\r\n    const doc = await sheetInit();\r\n    const sheet = doc.sheetsByTitle[\"&lt;Sheet name&gt;\"];\r\n    const rows = await sheet.getRows();\r\n    rows[index] = row;\r\n    await rows[index].save();\r\n}\r\n</code></pre>\r\n<hr>\r\n<h1>3. Github 배포</h1>\r\n<ul>\r\n<li>라이브러리 설치</li>\r\n</ul>\r\n<pre><code>$ npm install gh-pages\r\n</code></pre>\r\n<ul>\r\n<li>package.json 수정</li>\r\n</ul>\r\n<pre><code class=\"language-json\" lang=\"json\">{\r\n    ...\r\n    \"scripts\": {\r\n        ...\r\n        \"deploy\": \"gh-pahes -d &lt;Build directory&gt; -b &lt;branch&gt;\"\r\n    },\r\n    ...\r\n    \"homepage\": &lt;Repository URL&gt;\r\n}\r\n</code></pre>\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Wrapper>\r\n            <HeaderWrapper>\r\n                <h1>README</h1>\r\n            </HeaderWrapper>\r\n            <BodyWrapper>\r\n                <div className=\"home\" dangerouslySetInnerHTML={{ __html: contents }} />\r\n            </BodyWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 100vh;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Header = styled.div`\r\n    font-size: 50px;\r\n    font-weight: 800;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 25px;\r\n    }\r\n`\r\n\r\nconst Description = styled.div`\r\n    margin-top: 20px;\r\n    font-size: 25px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>404 : Page Not Found</Header>\r\n            <Description>요청하신 페이지를 찾을 수 없습니다.</Description>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst FindPassword = () => {\r\n    return (\r\n        <Wrapper>\r\n            (기능 구현 중 ... 🤔)\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default FindPassword;","import { pbkdf2, randomBytes } from \"crypto\";\r\nimport ENCODE_CONFIG from './encode.config.json';\r\n\r\nexport const createSaltKey = () =>\r\n    new Promise((resolve, reject) => {\r\n        randomBytes(64, (error, buffer) => {\r\n            const salt = `S-${buffer.toString('base64')}`\r\n            if (error) reject(error);\r\n            resolve(salt);\r\n        })\r\n    })\r\n\r\nexport const encodingPassword = (salt, password) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(password, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _password = `P-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_password);\r\n        })\r\n    })\r\n\r\nexport const encodingAuthor = (salt, author) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(author, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _author = `A-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_author);\r\n        })\r\n    })","export const EMAIL_EXP = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nexport const PASSWORD_EXP = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{10,12}$/;\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { createSaltKey, encodingAuthor, encodingPassword } from \"./encode\";\r\nimport API_KEY from './google.sheets.key.json';\r\nimport { v4 } from 'uuid';\r\n\r\nconst api = {\r\n    doc: new GoogleSpreadsheet(API_KEY.GOOGLE_SHEET_ID),\r\n    sheet: {\r\n        user: \"user\",\r\n        todo: \"todo\"\r\n    },\r\n    header: {\r\n        user: ['uuid', 'email', 'name', 'salt', 'password', 'registDate', 'author'],\r\n        todo: ['uuid', 'id', 'title', 'todos']\r\n    },\r\n    init: async () => {\r\n        await api.doc.useServiceAccountAuth(API_KEY.GOOGLE_CONFIG);\r\n        await api.doc.loadInfo();\r\n    }\r\n}\r\n\r\nconst getToday = () => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${('0' + (today.getMonth() + 1)).slice(-2)}-${('0' + today.getDate()).slice(-2)}`\r\n}\r\n\r\nexport const emailExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nexport const passwordExp = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{10,12}$/;\r\n\r\nexport const getAuthInGoogleSheet = (email) =>\r\n    new Promise(async (resolve, reject) => {\r\n        let auth = null;\r\n        if (email) {\r\n            await api.init();\r\n            await api.doc.sheetsByTitle[api.sheet.user].getRows()\r\n                .then(rows => {\r\n                    rows.forEach(row => {\r\n                        if (email === row.email) {\r\n                            auth = {};\r\n                            api.header.user.map(key =>\r\n                                auth[key] = row[key]\r\n                            )\r\n                            return;\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => reject(error))\r\n        }\r\n        resolve(auth);\r\n    })\r\n\r\nexport const appendUserInGoogleSheet = (email, name, password) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const uuid = `U-${v4()}`;\r\n        const salt = await createSaltKey();\r\n        const _password = await encodingPassword(salt, password);\r\n        const _author = await encodingAuthor(salt, 'user');\r\n        const registDate = getToday();\r\n        const auth = {\r\n            uuid,\r\n            name,\r\n            email,\r\n            salt,\r\n            password: _password,\r\n            author: _author,\r\n            registDate\r\n        };\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.user].addRow(auth)\r\n            .then(() => {\r\n                resolve(auth);\r\n            })\r\n            .catch(error => reject(error))\r\n    })\r\n\r\nexport const getTodosFromGoogleSheet = (uuid) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const groups = [];\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(rows => {\r\n                rows.forEach(row => {\r\n                    if (row.uuid === uuid) {\r\n                        const group = {};\r\n                        api.header.todo.forEach(key => {\r\n                            if (key === 'todos') group[key] = JSON.parse(row[key])\r\n                            else group[key] = row[key]\r\n                        })\r\n                        groups.push(group);\r\n                    }\r\n                })\r\n                resolve(groups);\r\n            })\r\n            .catch(error => reject(error))\r\n    })\r\n\r\nexport const appendGroupInGoogleSheet = (group) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].addRow({ ...group, todos: '[]' })\r\n            .then(() => resolve(group))\r\n            .catch(error => reject(error));\r\n    });\r\n\r\nexport const editGroupTitleInGoogleSheet = (uuid, group_id, editTitle) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return\r\n                    }\r\n                });\r\n                groups[index].title = editTitle;\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n\r\nexport const removeGroupFromGoogleSheet = (uuid, group_id) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return\r\n                    }\r\n                });\r\n                await groups[index].delete();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    })\r\n\r\nexport const appendTodoInGoogleSheet = (uuid, group_id, todo) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return\r\n                    }\r\n                });\r\n                const todos = [...JSON.parse(groups[index].todos), todo];\r\n                groups[index].todos = JSON.stringify(todos);\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    })\r\n\r\nexport const doneTodoInGoogleSheet = (uuid, group_id, todo_id, done) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return;\r\n                    }\r\n                });\r\n                const todos = [...JSON.parse(groups[index].todos)].map(todo => todo.id === todo_id ? { ...todo, done } : todo)\r\n                groups[index].todos = JSON.stringify(todos);\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error))\r\n    })\r\n\r\nexport const removeTodoFromGoogleSheet = (uuid, group_id, todo_id) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return;\r\n                    }\r\n                });\r\n                const todos = [...JSON.parse(groups[index].todos)].filter(todo => todo.id !== todo_id);\r\n                groups[index].todos = JSON.stringify(todos);\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    })\r\n\r\nexport const editTodoTextInGoogleSheet = (uuid, group_id, todo_id, editText) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.id === group_id) {\r\n                        index = _index\r\n                        return;\r\n                    }\r\n                });\r\n                const todos = [...JSON.parse(groups[index].todos)].map(todo => todo.id === todo_id ? { ...todo, text: editText } : todo);\r\n                groups[index].todos = JSON.stringify(todos);\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    })","import Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = ({ type, color, height, width }) => {\r\n    return (\r\n        <Loader\r\n            type={type}\r\n            color={color}\r\n            height={height}\r\n            width={width}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LoginHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    \r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst LoginHeader = () => {\r\n    return (\r\n        <LoginHeaderWrapper>\r\n            <h1>로그인</h1>\r\n        </LoginHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default LoginHeader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\nimport { encodingPassword } from '../../util/encode';\r\nimport { EMAIL_EXP, PASSWORD_EXP } from '../../util/expression';\r\nimport { getAuthInGoogleSheet } from '../../util/google.sheets';\r\nimport { getLocalSave } from '../../util/storage';\r\nimport Spinner from '../Common/Spinner';\r\nimport LoginHeader from './LoginHeader';\r\n\r\nconst LoginForm = styled.form`\r\n    background: white;\r\n\r\n    width: 100%;\r\n    max-width: 500px;\r\n\r\n    margin: 0 auto;\r\n\r\n    padding-top: 32px;\r\n    padding-bottom: 16px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 300px;\r\n    }\r\n`\r\n\r\nconst LoginLabel = styled.div`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            color: red;\r\n        `\r\n    } \r\n`\r\n\r\nconst LoginInput = styled.input`\r\n    padding: 12px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            border: 1px solid red;\r\n            color: red;\r\n        `\r\n    } \r\n`\r\n\r\nconst LoginCheck = styled.div`\r\n    display: flex;\r\n    flex-direction: initial;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;    \r\n\r\n    input {\r\n        width: 20px;\r\n        height: 20px;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    margin: 10px 0;\r\n`\r\n\r\nconst LoginButtonWrapper = styled.div`\r\n    margin: 10px 0;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    background-color: #38d9a9;\r\n    cursor: pointer;\r\n\r\n    *{\r\n        width: 100%;\r\n        padding: 5px;\r\n    }\r\n\r\n    button {\r\n        padding: 12px;\r\n    }\r\n`\r\n\r\nconst LoginButton = styled.button`\r\n    border: 0;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n`\r\n\r\nconst LoginOtherButtonsWrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 10px auto;\r\n\r\n    * {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        width: 300px;\r\n\r\n        * {\r\n            margin: 0 10px;\r\n        }\r\n    }\r\n`\r\n\r\nconst LoginTemplate = () => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const save = getLocalSave();\r\n\r\n    const [email, setEmail] = useState(save === null ? '' : save);\r\n    const [password, setPassword] = useState('');\r\n    const [check, setCheck] = useState(save === null ? false : true)\r\n\r\n    const [disable, setDisable] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const onEmail = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setEmail(value);\r\n\r\n        if (value === '')\r\n            setEmailError('이메일을 입력하세요.')\r\n        else if (value.match(EMAIL_EXP) === null)\r\n            setEmailError('이메일 형식에 맞지 않습니다.')\r\n        else setEmailError('');\r\n    };\r\n    const onPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setPassword(value);\r\n\r\n        if (value === '')\r\n            setPasswordError('비밀번호를 입력하세요.')\r\n        else if (value.match(PASSWORD_EXP) === null)\r\n            setPasswordError('비밀번호를 다시 확인하세요.')\r\n        else setPasswordError('')\r\n    };\r\n    const onCheck = (event) => setCheck(event.target.value);\r\n    const onLogin = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const errors = [\r\n            emailError,\r\n            passwordError\r\n        ].join('');\r\n\r\n        let error = '';\r\n\r\n        if (email === '') {\r\n            error = \"이메일을 입력하세요.\"\r\n            setEmailError(error);\r\n        }\r\n\r\n        if (password === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setPasswordError(error);\r\n        }\r\n\r\n        if (errors + error === '') {\r\n            setLoader(true)\r\n            setDisable(true)\r\n            await getAuthInGoogleSheet(email)\r\n                .then(async (auth) => {\r\n                    if (auth === null) {\r\n                        setEmailError('존재하지 않은 이메일 계정입니다.')\r\n                        setDisable(false)\r\n                        setLoader(false)\r\n                    } else if (await encodingPassword(auth.salt, password) !== auth.password) {\r\n                        setPasswordError('비밀번호가 일치하지 않습니다.')\r\n                        setDisable(false)\r\n                        setLoader(false)\r\n                    } else {\r\n                        dispatch({ type: \"AUTH_LOGIN\", auth, check })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginHeader />\r\n            <LoginForm onSubmit={onLogin}>\r\n                <LoginLabel error={emailError}>\r\n                    {\r\n                        emailError\r\n                            ? emailError\r\n                            : (\"이메일\")\r\n                    }\r\n                </LoginLabel>\r\n                <LoginInput type=\"text\" error={emailError} value={email} onChange={onEmail} disabled={disable} />\r\n\r\n                <LoginLabel error={passwordError}>\r\n                    {\r\n                        passwordError\r\n                            ? passwordError\r\n                            : (\"비밀번호\")\r\n                    }\r\n                </LoginLabel>\r\n                <LoginInput type=\"password\" error={passwordError} value={password} onChange={onPassword} disabled={disable} />\r\n\r\n                <LoginCheck>\r\n                    <LoginInput type=\"checkbox\" value={check} onChange={onCheck} checked={check} disabled={disable} />\r\n                    이메일 기억하기\r\n                </LoginCheck>\r\n                <LoginButtonWrapper>\r\n                    {\r\n                        loader\r\n                            ? <Spinner width={36} height={36} type=\"Oval\" color=\"#3d66ba\" />\r\n                            : <LoginButton type=\"submit\" disabled={disable}>로그인</LoginButton>\r\n                    }\r\n                </LoginButtonWrapper>\r\n                <LoginOtherButtonsWrapper>\r\n                    <Link to=\"/auth/signup/\">회원가입</Link>\r\n                    <Link to=\"/auth/find-password/\">비밀번호 찾기</Link>\r\n                </LoginOtherButtonsWrapper>\r\n            </LoginForm >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginTemplate;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SignupHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n        text-align: center;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst SignupHeader = () => {\r\n    return (\r\n        <SignupHeaderWrapper>\r\n            <h1>회원가입</h1>\r\n        </SignupHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default SignupHeader;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\nimport { EMAIL_EXP, PASSWORD_EXP } from '../../util/expression';\r\nimport { appendUserInGoogleSheet, getAuthInGoogleSheet } from '../../util/google.sheets';\r\nimport Spinner from '../Common/Spinner';\r\nimport SignupHeader from './SignupHeader';\r\n\r\nconst SignupForm = styled.form`\r\n    background: white;\r\n\r\n    width: 100%;\r\n    max-width: 500px;\r\n\r\n    margin: 0 auto;\r\n\r\n    padding-top: 32px;\r\n    padding-bottom: 72px;\r\n    \r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nconst SignupLabel = styled.div`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            color: red;\r\n        `\r\n    } \r\n`;\r\n\r\nconst SignupInput = styled.input`\r\n    padding: 12px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            border: 1px solid red;\r\n            color: red;\r\n        `\r\n    } \r\n`;\r\n\r\nconst SignupButtonWrapper = styled.div`\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    background-color: #38d9a9;\r\n    cursor: pointer;\r\n\r\n    *{\r\n        width: 100%;\r\n        padding: 5px;\r\n    }\r\n\r\n    button {\r\n        padding: 12px;\r\n    }\r\n`\r\n\r\nconst SignupButton = styled.button`\r\n    border: 0;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n`\r\n\r\nconst SignupTemplate = () => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [firstPassword, setFirstPassword] = useState('');\r\n    const [lastPassword, setLastPassword] = useState('');\r\n\r\n    const [disable, setDisable] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [nameError, setNameError] = useState('');\r\n    const [firstPasswordError, setFirstPasswordError] = useState('');\r\n    const [lastPasswordError, setLastPasswordError] = useState('');\r\n\r\n    const onEmail = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setEmail(value);\r\n\r\n        if (value === '')\r\n            setEmailError('이메일을 입력하세요.')\r\n        else if (value.match(EMAIL_EXP) === null)\r\n            setEmailError('이메일 형식에 맞지 않습니다.');\r\n        else setEmailError('');\r\n    };\r\n\r\n    const onName = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setName(value)\r\n\r\n        if (value === '')\r\n            setNameError('이름을 입력하세요.')\r\n        else setNameError('');\r\n    };\r\n\r\n    const onFirstPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setFirstPassword(value);\r\n\r\n        if (value === '')\r\n            setFirstPasswordError('비밀번호를 입력하세요.')\r\n        else if (value.match(PASSWORD_EXP) === null)\r\n            setFirstPasswordError('비밀번호 형식에 맞지 않습니다.')\r\n        else setFirstPasswordError('');\r\n    };\r\n\r\n    const onLastPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setLastPassword(value);\r\n\r\n        if (value === '')\r\n            setLastPasswordError('비밀번호를 입력하세요.')\r\n        else if (value !== firstPassword)\r\n            setLastPasswordError('비밀번호가 일치하지 않습니다.')\r\n        else setLastPasswordError('');\r\n    }\r\n\r\n    const onSignup = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const errors = [\r\n            emailError,\r\n            nameError,\r\n            firstPasswordError,\r\n            lastPasswordError\r\n        ].join('');\r\n\r\n        let error = \"\";\r\n\r\n        if (email === '') {\r\n            error = \"이메일을 입력하세요.\"\r\n            setEmailError(error)\r\n        }\r\n\r\n        if (name === '') {\r\n            error = \"이름을 입력하세요.\"\r\n            setNameError(error)\r\n        }\r\n\r\n        if (firstPassword === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setFirstPasswordError(error)\r\n        }\r\n\r\n        if (lastPassword === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setLastPasswordError(error);\r\n        }\r\n\r\n        if (errors + error === '') {\r\n            setLoader(true)\r\n            setDisable(true)\r\n            const _auth = await getAuthInGoogleSheet(email)\r\n\r\n            if (_auth) {\r\n                setEmailError('이미 존재하는 이메일 계정입니다.')\r\n                setLoader(false)\r\n                setDisable(false)\r\n            } else {\r\n                const auth = await appendUserInGoogleSheet(email, name, firstPassword);\r\n                dispatch({ type: \"AUTH_SIGNUP\", auth });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SignupHeader />\r\n            <SignupForm onSubmit={onSignup}>\r\n                <SignupLabel error={emailError}>\r\n                    {\r\n                        emailError\r\n                            ? emailError\r\n                            : (\"이메일\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"text\" error={emailError} value={email} onChange={onEmail} disabled={disable} />\r\n\r\n                <SignupLabel error={nameError}>\r\n                    {\r\n                        nameError\r\n                            ? nameError\r\n                            : (\"이름\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"name\" error={nameError} value={name} onChange={onName} disabled={disable} />\r\n\r\n                <SignupLabel error={firstPasswordError}>\r\n                    {\r\n                        firstPasswordError\r\n                            ? firstPasswordError\r\n                            : (\"비밀번호\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"password\" error={firstPasswordError} value={firstPassword} onChange={onFirstPassword} disabled={disable} />\r\n\r\n                <SignupLabel error={lastPasswordError}>\r\n                    {\r\n                        lastPasswordError\r\n                            ? lastPasswordError\r\n                            : (\"비밀번호 재입력\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"password\" error={lastPasswordError} value={lastPassword} onChange={onLastPassword} disabled={disable} />\r\n                <SignupButtonWrapper>\r\n                    {\r\n                        loader\r\n                            ? <Spinner width={36} height={36} type=\"Oval\" color=\"#3d66ba\" />\r\n                            : <SignupButton type=\"submit\" disabled={disable}>회원가입</SignupButton>\r\n                    }\r\n                </SignupButtonWrapper>\r\n            </SignupForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupTemplate","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport FindPassword from '../components/Auth/FindPassword';\r\nimport LoginTemplate from '../components/Auth/LoginTemplate';\r\nimport SignupTemplate from '../components/Auth/SignupTemplate';\r\nimport { useAuthState } from '../context/AuthContext';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 100vh;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst AuthRoute = () => {\r\n\r\n    const auth = useAuthState();\r\n\r\n    if (auth) {\r\n        return <Redirect exact={true} to=\"/\" />\r\n    } else {\r\n        return (\r\n            <Wrapper>\r\n                <Switch>\r\n                    <Route path=\"/auth/login/\" component={LoginTemplate} />\r\n                    <Route path=\"/auth/signup/\" component={SignupTemplate} />\r\n                    <Route path=\"/auth/find-password/\" component={FindPassword} />\r\n                </Switch>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthRoute;","import React, { useContext, createContext, useReducer } from 'react';\r\n\r\nconst initTodos = [];\r\n\r\nfunction Reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"INIT\":\r\n            return action.groups\r\n\r\n        case \"GROUP_APPEND\":\r\n            return state.concat({\r\n                ...action.group,\r\n                todos: []\r\n            });\r\n\r\n        case \"GROUP_CHANGE\":\r\n            return state.map((group) => group.id === action.group_id ? { ...group, title: action.editTitle } : group)\r\n\r\n        case \"GROUP_REMOVE\":\r\n            return state.filter((group) => group.uuid === action.uuid && group.id !== action.group_id)\r\n\r\n        case \"TODO_APPEND\":\r\n            return state.map(group => {\r\n                if (group.uuid === action.uuid && group.id === action.group_id) {\r\n                    group.todos.push(action.todo)\r\n                }\r\n                return group\r\n            })\r\n        case \"TODO_CHANGE\":\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos.map(todo => {\r\n                        if (todo.id === action.todo_id) {\r\n                            todo.text = action.editText\r\n                        }\r\n                        return todo\r\n                    })\r\n                }\r\n                return group\r\n            });\r\n        case \"TODO_DONE\":\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos.map(todo => {\r\n                        if (todo.id === action.todo_id) {\r\n                            todo.done = !todo.done\r\n                        }\r\n                        return todo\r\n                    })\r\n                }\r\n                return group\r\n            });\r\n        case \"TODO_REMOVE\":\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos.forEach((todo, index) => {\r\n                        if (todo.id === action.todo_id) {\r\n                            group.todos.splice(index, 1)\r\n                            return\r\n                        }\r\n                    })\r\n                }\r\n                return group\r\n            });\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(Reducer, initTodos);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport const useTodoDispatch = () => {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}","import React, { useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\nimport { v4 } from 'uuid';\r\nimport { appendGroupInGoogleSheet } from '../../util/google.sheets';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport Spinner from '../Common/Spinner';\r\n\r\nconst GroupAppendForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n`;\r\n\r\nconst GroupAppendInput = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst GroupAppendButton = styled.button`\r\n    background: #38d9a9;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n                background: #ff6b6b;\r\n                &:hover {\r\n                    background: #ff8787;\r\n                }\r\n\r\n                &:active {\r\n                    background: #fa5252;\r\n                }\r\n\r\n                transform: translate(-50%, 50%) rotate(45deg);\r\n            `\r\n    }\r\n`;\r\n\r\nconst GroupAppend = () => {\r\n    const auth = useAuthState();\r\n    const dispatch = useTodoDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const onAppend = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (title) {\r\n            setLoader(true);\r\n\r\n            const group = {\r\n                id: `G-${v4()}`,\r\n                title,\r\n                uuid: auth.uuid\r\n            };\r\n\r\n            await appendGroupInGoogleSheet(group)\r\n                .then(() => {\r\n                    dispatch({\r\n                        type: \"GROUP_APPEND\",\r\n                        group\r\n                    })\r\n                    setTitle('');\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n\r\n            setLoader(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>{\r\n            open && (\r\n                <GroupAppendForm onSubmit={onAppend}>\r\n                    {\r\n                        loader\r\n                            ? (\r\n                                <Spinner\r\n                                    width={30}\r\n                                    height={30}\r\n                                    type=\"Oval\"\r\n                                    color=\"#3d66ba\"\r\n                                />\r\n                            ) : (\r\n                                <GroupAppendInput\r\n                                    autoFocus\r\n                                    placeholder=\"새 그룹 추가\"\r\n                                    value={title}\r\n                                    onChange={event => setTitle(event.target.value)}\r\n                                />\r\n                            )\r\n                    }\r\n                </GroupAppendForm>\r\n            )\r\n        }\r\n            <GroupAppendButton open={open} onClick={() => setOpen(!open)}>\r\n                <MdAdd />\r\n            </GroupAppendButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupAppend;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GroupHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    width: 100%;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`\r\nconst GroupHeader = () => {\r\n    return (\r\n        <GroupHeaderWrapper>\r\n            <h1>TODO 그룹</h1>\r\n        </GroupHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default GroupHeader;","import React, { useState, memo } from 'react';\r\nimport { MdCancel, MdDelete, MdEdit, MdSave } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\nimport { editGroupTitleInGoogleSheet, removeGroupFromGoogleSheet } from '../../util/google.sheets';\r\nimport Spinner from '../Common/Spinner';\r\n\r\nconst GroupButtonWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 50px;\r\n`\r\n\r\nconst RemoveButton = styled.div`\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst EditButton = styled.div`\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst SaveButton = styled.div`\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled.div`\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {x\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst GroupItemWapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${EditButton},\r\n        ${RemoveButton} {\r\n            display: initial;\r\n        }\r\n    }\r\n`\r\nconst GroupText = styled.div`\r\n    flex: 1;\r\n    font-size: 20px;\r\n    color: #495057;\r\n`;\r\n\r\nconst GroupLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: #495057;\r\n`;\r\n\r\nconst GroupForm = styled.form`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n`\r\n\r\nconst GroupInput = styled.input`\r\n    width: 100%;\r\n    font-size: 20px;\r\n    color: #495057;\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst GroupItem = ({ group_id, title }) => {\r\n    const auth = useAuthState();\r\n    const dispatch = useTodoDispatch();\r\n    const [editTitle, setEditTitle] = useState(title);\r\n\r\n    const onTitleChange = (event) => setEditTitle(event.target.value)\r\n    const onEditable = () => setEditable(true);\r\n\r\n    const [editable, setEditable] = useState(false);\r\n    const [disable, setDisable] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const onRemove = async () => {\r\n        const uuid = auth.uuid;\r\n\r\n        setDisable(true);\r\n        setLoader(true);\r\n        await removeGroupFromGoogleSheet(uuid, group_id)\r\n            .then(() => {\r\n                setDisable(false);\r\n                setLoader(false);\r\n                dispatch({ type: \"GROUP_REMOVE\", uuid, group_id })\r\n            })\r\n            .catch(error => {\r\n                setDisable(false);\r\n                setLoader(false);\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    const onSave = async (event) => {\r\n        event.preventDefault();\r\n        if (title !== editTitle) {\r\n            const uuid = auth.uuid;\r\n\r\n            setDisable(true);\r\n            setLoader(true);\r\n\r\n            await editGroupTitleInGoogleSheet(uuid, group_id, editTitle)\r\n                .then(() => {\r\n                    dispatch({ type: \"GROUP_CHANGE\", group_id, editTitle });\r\n                    setEditable(false);\r\n                })\r\n                .catch(error => console.log(error));\r\n\r\n            setLoader(false);\r\n            setDisable(false);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setEditTitle(title);\r\n        setEditable(false);\r\n    }\r\n\r\n    return (\r\n        <GroupItemWapper>\r\n            {\r\n                editable\r\n                    ? (\r\n                        <GroupForm onSubmit={onSave}>\r\n                            🔗 <GroupInput type=\"text\" value={editTitle} onChange={onTitleChange} disabled={disable} autoFocus />\r\n                        </GroupForm>\r\n                    ) : (\r\n                        <GroupText>\r\n                            <GroupLink\r\n                                to={`/todo/?group_id=${group_id}`}\r\n                            >\r\n                                🔗 {title}\r\n                            </GroupLink>\r\n                        </GroupText>\r\n                    )\r\n            }\r\n            <GroupButtonWrapper>\r\n                {\r\n                    loader\r\n                        ? (\r\n                            <Spinner\r\n                                width={20}\r\n                                height={20}\r\n                                type=\"Oval\"\r\n                                color=\"#3d66ba\"\r\n                            />\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    editable\r\n                                        ? (\r\n                                            <>\r\n                                                <SaveButton onClick={onSave}>\r\n                                                    <MdSave />\r\n                                                </SaveButton>\r\n                                                <CancelButton onClick={onCancel}>\r\n                                                    <MdCancel />\r\n                                                </CancelButton>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <EditButton onClick={onEditable}>\r\n                                                    <MdEdit />\r\n                                                </EditButton>\r\n                                                <RemoveButton onClick={onRemove}>\r\n                                                    <MdDelete />\r\n                                                </RemoveButton>\r\n                                            </>\r\n                                        )\r\n\r\n                                }\r\n                            </>\r\n                        )\r\n                }\r\n            </GroupButtonWrapper>\r\n        </GroupItemWapper>\r\n    )\r\n}\r\n\r\nexport default memo(GroupItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport GroupItem from './GroupItem';\r\n\r\nconst GroupListWrapper = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst GroupList = ({ groups }) => {\r\n    return (\r\n        <GroupListWrapper>\r\n            {\r\n                groups.map((group, index) => (\r\n                    <GroupItem\r\n                        key={index}\r\n                        group_id={group.id}\r\n                        title={group.title}\r\n                    />\r\n                ))\r\n            }\r\n        </GroupListWrapper>\r\n    )\r\n}\r\n\r\nexport default GroupList;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 100vh;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Header = styled.div`\r\n    font-size: 50px;\r\n    font-weight: 800;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 25px;\r\n    }\r\n`\r\n\r\nconst Description = styled.div`\r\n    margin-top: 20px;\r\n    font-size: 25px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nconst GroupNotFound = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>404 : Page Not Found</Header>\r\n            <Description>삭제되었거나 접근할 수 없는 콘텐츠입니다.</Description>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default GroupNotFound;","import React from 'react';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport { useTodoState } from '../../context/TodoContext';\r\nimport GroupAppend from './GroupAppend';\r\nimport GroupHeader from './GroupHeader';\r\nimport GroupList from './GroupList';\r\nimport GroupNotFound from './GroupNotFound';\r\n\r\nconst GroupTemplate = () => {\r\n    const auth = useAuthState()\r\n    const groups = useTodoState().filter(group => group.uuid === auth.uuid)\r\n    return (\r\n        <>\r\n            {\r\n                groups === undefined\r\n                    ? <GroupNotFound />\r\n                    : (\r\n                        <>\r\n                            <GroupHeader />\r\n                            <GroupList groups={groups} />\r\n                            <GroupAppend />\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupTemplate;","import React, { memo, useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\nimport { v4 } from 'uuid';\r\nimport { appendTodoInGoogleSheet } from '../../util/google.sheets';\r\nimport Spinner from '../Common/Spinner';\r\n\r\nconst TodoAppendForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n`;\r\n\r\nconst TodoAppendInput = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst TodoAppendButton = styled.button`\r\n    background: #38d9a9;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n                background: #ff6b6b;\r\n                &:hover {\r\n                    background: #ff8787;\r\n                }\r\n\r\n                &:active {\r\n                    background: #fa5252;\r\n                }\r\n\r\n                transform: translate(-50%, 50%) rotate(45deg);\r\n            `\r\n    }\r\n`;\r\n\r\nconst TodoAppend = ({ group_id }) => {\r\n    const auth = useAuthState();\r\n    const dispatch = useTodoDispatch();\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const onAppend = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (text) {\r\n            setLoader(true);\r\n\r\n            const uuid = auth.uuid;\r\n            const todo = {\r\n                id: `T-${v4()}`,\r\n                text,\r\n                done: false\r\n            };\r\n\r\n            await appendTodoInGoogleSheet(uuid, group_id, todo)\r\n                .then(() => {\r\n                    setText('');\r\n                    dispatch({\r\n                        type: \"TODO_APPEND\",\r\n                        uuid,\r\n                        group_id,\r\n                        todo\r\n                    })\r\n                })\r\n                .catch(error => console.log(error));\r\n\r\n            setLoader(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                open && (\r\n                    <TodoAppendForm onSubmit={onAppend}>\r\n                        {\r\n                            loader\r\n                                ? (\r\n                                    <Spinner\r\n                                        width={30}\r\n                                        height={30}\r\n                                        type=\"Oval\"\r\n                                        color=\"#3d66ba\"\r\n                                    />\r\n                                ) : (\r\n                                    <TodoAppendInput\r\n                                        autoFocus\r\n                                        placeholder=\"새로운 할 일 추가\"\r\n                                        value={text}\r\n                                        onChange={event => setText(event.target.value)}\r\n                                    />\r\n                                )\r\n                        }\r\n                    </TodoAppendForm>\r\n                )\r\n            }\r\n            <TodoAppendButton open={open} onClick={() => setOpen(!open)}>\r\n                <MdAdd />\r\n            </TodoAppendButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TodoAppend);","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete, MdEdit, MdSave, MdCancel } from 'react-icons/md'\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\nimport { doneTodoInGoogleSheet, editTodoTextInGoogleSheet, removeTodoFromGoogleSheet } from '../../util/google.sheets';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport Spinner from '../Common/Spinner';\r\n\r\nconst TodoButtonWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 50px;\r\n`\r\n\r\nconst RemoveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst EditButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst SaveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst TodoItemWapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${EditButton},\r\n        ${RemoveButton} {\r\n            display: initial;\r\n        }\r\n    }\r\n`\r\n\r\nconst TodoCheckBoxWrapper = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n`\r\n\r\nconst TodoCheckBox = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `\r\n    }\r\n`;\r\n\r\nconst TodoText = styled.div`\r\n    flex: 1;\r\n    font-size: 20px;\r\n    color: #495057;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            color: #ced4da;\r\n        `\r\n    }\r\n`;\r\n\r\nconst TodoForm = styled.form`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n`\r\n\r\nconst TodoInput = styled.input`\r\n    width: 100%;\r\n    color: #495057;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TodoItem = ({ group_id, todo_id, text, done }) => {\r\n    const auth = useAuthState();\r\n    const dispatch = useTodoDispatch();\r\n    const [editText, setEditText] = useState(text);\r\n\r\n    const onTextChange = (event) => { setEditText(event.target.value) }\r\n    const onEditable = () => setEditable(true);\r\n\r\n    const [editable, setEditable] = useState(false);\r\n    const [disable, setDisable] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    const onDone = async () => {\r\n        const uuid = auth.uuid;\r\n\r\n        setChecking(true);\r\n\r\n        await doneTodoInGoogleSheet(uuid, group_id, todo_id, !done)\r\n            .then(() => dispatch({ type: \"TODO_DONE\", group_id, todo_id }))\r\n            .catch(error => console.log(error))\r\n\r\n        setChecking(false);\r\n    }\r\n\r\n    const onRemove = async () => {\r\n        const uuid = auth.uuid;\r\n\r\n        setDisable(true);\r\n        setLoader(true);\r\n\r\n        await removeTodoFromGoogleSheet(uuid, group_id, todo_id)\r\n            .then(() => {\r\n                setDisable(false);\r\n                setLoader(false);\r\n                dispatch({ type: \"TODO_REMOVE\", group_id, todo_id })\r\n            })\r\n            .catch(error => {\r\n                setDisable(false);\r\n                setLoader(false);\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const onSave = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (text !== editText) {\r\n            const uuid = auth.uuid;\r\n\r\n            setDisable(true);\r\n            setLoader(true);\r\n\r\n            await editTodoTextInGoogleSheet(uuid, group_id, todo_id, editText)\r\n                .then(() => {\r\n                    dispatch({ type: \"TODO_CHANGE\", group_id, todo_id, editText })\r\n                    setEditable(false);\r\n                })\r\n                .catch(error => console.log(error));\r\n\r\n            setLoader(false);\r\n            setDisable(false);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setEditText(text);\r\n        setEditable(false);\r\n    }\r\n\r\n    return (\r\n        <TodoItemWapper>\r\n            <TodoCheckBoxWrapper>\r\n                {\r\n                    checking\r\n                        ? (\r\n                            <Spinner\r\n                                width={20}\r\n                                height={20}\r\n                                type=\"Oval\"\r\n                                color=\"#3d66ba\"\r\n                            />\r\n                        ) : (\r\n                            <TodoCheckBox done={done} onClick={onDone}>\r\n                                {done && <MdDone />}\r\n                            </TodoCheckBox>\r\n                        )\r\n                }\r\n            </TodoCheckBoxWrapper>\r\n\r\n            {\r\n                editable\r\n                    ? (\r\n                        <TodoForm onSubmit={onSave}>\r\n                            <TodoInput type=\"text\" value={editText} onChange={onTextChange} disabled={disable} autoFocus />\r\n                        </TodoForm>\r\n                    )\r\n                    : <TodoText done={done}>{text}</TodoText>\r\n\r\n            }\r\n\r\n            <TodoButtonWrapper>\r\n                {\r\n                    loader\r\n                        ? (\r\n                            <Spinner\r\n                                width={20}\r\n                                height={20}\r\n                                type=\"Oval\"\r\n                                color=\"#3d66ba\"\r\n                            />\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    editable\r\n                                        ? (\r\n                                            <>\r\n                                                <SaveButton onClick={onSave}>\r\n                                                    <MdSave />\r\n                                                </SaveButton>\r\n                                                <CancelButton onClick={onCancel}>\r\n                                                    <MdCancel />\r\n                                                </CancelButton>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <EditButton onClick={onEditable}>\r\n                                                    <MdEdit />\r\n                                                </EditButton>\r\n                                                <RemoveButton onClick={onRemove}>\r\n                                                    <MdDelete />\r\n                                                </RemoveButton>\r\n                                            </>\r\n                                        )\r\n                                }\r\n                            </>\r\n                        )\r\n                }\r\n            </TodoButtonWrapper>\r\n        </TodoItemWapper>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nconst TodoListWrapper = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst TodoList = ({ group_id, todos }) => {\r\n    return (\r\n        <TodoListWrapper>\r\n            {\r\n                todos.map((todo, index) => (\r\n                    <TodoItem\r\n                        key={index}\r\n                        group_id={group_id}\r\n                        todo_id={todo.id}\r\n                        text={todo.text}\r\n                        done={todo.done}\r\n                    />\r\n                ))\r\n            }\r\n        </TodoListWrapper>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 100vh;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Header = styled.div`\r\n    font-size: 50px;\r\n    font-weight: 800;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 25px;\r\n    }\r\n`\r\n\r\nconst Description = styled.div`\r\n    margin-top: 20px;\r\n    font-size: 25px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nconst TodoNotFound = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>404 : Page Not Found</Header>\r\n            <Description>삭제되었거나 접근할 수 없는 콘텐츠입니다.</Description>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default TodoNotFound;","import React from 'react';\r\nimport { MdArrowBack } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 20px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`\r\nconst TodoBackLink = styled(Link)`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background: #ffffff;\r\n    color: #000000;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n    margin-right: 20px;\r\n`\r\n\r\nconst TodoHeader = ({ title }) => {\r\n    return (\r\n        <TodoHeaderWrapper>\r\n            <TodoBackLink to=\"/todo/groups/\">\r\n                <MdArrowBack />\r\n            </TodoBackLink>\r\n            <h1>{title}</h1>\r\n        </TodoHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default TodoHeader","import React from 'react';\r\nimport TodoAppend from './TodoAppend';\r\nimport { useTodoState } from '../../context/TodoContext';\r\nimport TodoList from './TodoList';\r\nimport TodoNotFound from './TodoNotFound';\r\nimport TodoHeader from './TodoHeader';\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst TodoTemplate = ({ location }) => {\r\n    const query = queryString.parse(location.search);\r\n    const group_id = query.group_id;\r\n    const group = useTodoState().filter(group => group.id === group_id)[0];\r\n    return (\r\n        <>\r\n            {\r\n                group === undefined\r\n                    ? <TodoNotFound />\r\n                    : (\r\n                        <>\r\n                            <TodoHeader title={group.title} />\r\n                            <TodoList group_id={group_id} todos={group.todos} />\r\n                            <TodoAppend group_id={group_id} />\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport GroupTemplate from '../components/Group/GroupTemplate';\r\nimport { useTodoDispatch } from '../context/TodoContext';\r\nimport TodoTemplate from '../components/Todo/TodoTemplate';\r\nimport { getTodosFromGoogleSheet } from '../util/google.sheets';\r\nimport { useAuthState } from '../context/AuthContext';\r\nimport { Switch } from 'react-router-dom';\r\nimport Spinner from '../components/Common/Spinner';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 100vh;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst SpinnerWrapper = styled.div`\r\n    display: flex;\r\n    margin: auto;\r\n    justify-content: center;\r\n`\r\n\r\nconst TodoRoute = () => {\r\n    const auth = useAuthState();\r\n    const [loader, setLoader] = useState(false);\r\n    const dispatch = useTodoDispatch();\r\n\r\n    useEffect(() => {\r\n        const Init = async () => {\r\n            if (auth !== null) {\r\n                setLoader(false);\r\n                await getTodosFromGoogleSheet(auth.uuid)\r\n                    .then((groups) => {\r\n                        dispatch({ type: \"INIT\", groups });\r\n                    })\r\n                    .catch((error) => console.log(error))\r\n                setLoader(true);\r\n            }\r\n        }\r\n        Init(auth);\r\n    }, [dispatch, auth])\r\n\r\n    if (auth === null) {\r\n        return <Redirect exact={true} to='/auth/login/' />\r\n    } else {\r\n        return (\r\n            <Wrapper>\r\n                {\r\n                    !loader\r\n                        ?\r\n                        <SpinnerWrapper>\r\n                            <Spinner\r\n                                width={75}\r\n                                height={75}\r\n                                type=\"Oval\"\r\n                                color=\"#3d66ba\"\r\n                            />\r\n                        </SpinnerWrapper>\r\n                        :\r\n                        <Switch>\r\n                            <Route exact={true} path=\"/todo/groups/\" component={GroupTemplate} />\r\n                            <Route path=\"/todo/\" component={TodoTemplate} />\r\n                        </Switch>\r\n                }\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoRoute;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Footer from \"./components/Common/Footer\";\nimport Header from \"./components/Common/Header\";\nimport Home from './components/Common/Home';\nimport Page404 from './components/Common/Page404';\nimport { useAuthState } from './context/AuthContext';\nimport AuthRoute from './routes/AuthRoute';\nimport TodoRoute from './routes/TodoRoute';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n    width: 100%;\n  }\n`\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst App = () => {\n  const auth = useAuthState();\n  return (\n    <Container>\n      <GlobalStyle />\n      <Header auth={auth} />\n      <Switch>\n        <Route exact={true} path=\"/\" component={Home} />\n        <Route path=\"/auth/\" component={AuthRoute} />\n        <Route path=\"/todo/\" component={TodoRoute} />\n        <Route path=\"/\" component={Page404} />\n      </Switch>\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport { TodoProvider } from './context/TodoContext';\nimport './index.css'\n\n\nReactDOM.render(\n  <HashRouter>\n    <AuthProvider>\n      <TodoProvider>\n        <App />\n      </TodoProvider>\n    </AuthProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}