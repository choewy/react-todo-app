{"version":3,"sources":["util/encode.js","util/google.sheets.js","util/storage.js","components/Common/Modal.js","components/Auth/Login.js","components/Auth/Signup.js","components/Auth/index.js","components/Common/Footer.js","components/Common/Navbar.js","components/Common/Header.js","components/Common/Home.js","components/Common/Page404.js","components/Todo/GroupList.js","components/Todo/TodoItem.js","components/Todo/GroupItem.js","components/Todo/index.js","App.js","index.js"],"names":["encodingPassword","salt","password","Promise","resolve","reject","pbkdf2","ENCODE_CONFIG","ITER","LENGTH","DIGEST","error","key","_password","toString","STRING_TYPE","encodingAuthor","author","_author","api","doc","GoogleSpreadsheet","API_KEY","GOOGLE_SHEET_ID","sheet","user","todo","header","init","a","useServiceAccountAuth","GOOGLE_CONFIG","loadInfo","getToday","today","Date","getFullYear","getMonth","slice","getDate","emailExp","passwordExp","findUserInGoogleSheet","email","auth","sheetsByTitle","getRows","then","rows","forEach","row","map","catch","appendUserInGoogleSheet","name","uuid","v4","randomBytes","buffer","registDate","addRow","getTodoFromGoogleSheet","groups","group","JSON","parse","push","AUTH_KEY","AUTO_SAVE","stringfy","object","stringify","string","getLocalAuth","localStorage","getItem","setLocalAuth","setItem","setLocalAutoSave","Modal","visible","setVisible","children","className","onClick","Login","autosave","useState","setEmail","setPassword","checked","setChecked","disabled","setDisabled","setError","handleLogin","event","preventDefault","match","_auth","removeItem","window","location","reload","_error","onSubmit","type","value","onChange","target","exact","to","Signup","setName","passwordInit","setPasswordInit","passwordLast","setPasswordLast","handleSignup","Auth","path","component","Footer","LinkLogin","pathname","state","LinkSignup","LinkTodo","LinkLogout","Navbar","Header","Home","Page404","temp","GroupList","_groups","tempGroups","index","group_seq","group_title","replace","EditButton","saveTodo","console","log","TodoItem","updateGroup","done","setDone","text","setText","description","setDescriptioin","onKeyPress","which","shiftKey","items","GroupItem","tempGroup","setGroup","title","setTitle","setDescription","_group","pushTodo","Todo","setGroups","useEffect","asyncFunction","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1c73d98.chunk.js","sourcesContent":["import { pbkdf2, randomBytes } from \"crypto\";\r\nimport ENCODE_CONFIG from './encode.config.json';\r\n\r\nexport const createSaltKey = () =>\r\n    new Promise((resolve, reject) => {\r\n        randomBytes(64, (error, buffer) => {\r\n            const salt = `S-${buffer.toString('base64')}`\r\n            if (error) reject(error);\r\n            resolve(salt);\r\n        })\r\n    })\r\n\r\nexport const encodingPassword = (salt, password) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(password, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _password = `P-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_password);\r\n        })\r\n    })\r\n\r\nexport const encodingAuthor = (salt, author) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(author, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _author = `A-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_author);\r\n        })\r\n    })","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { createSaltKey, encodingAuthor, encodingPassword } from \"./encode\";\r\nimport API_KEY from './google.sheets.key.json';\r\nimport { v4 } from 'uuid';\r\n\r\nconst api = {\r\n    doc: new GoogleSpreadsheet(API_KEY.GOOGLE_SHEET_ID),\r\n    sheet: {\r\n        user: \"user\",\r\n        todo: \"todo\"\r\n    },\r\n    header: {\r\n        user: ['uuid', 'email', 'name', 'salt', 'password', 'registDate', 'author'],\r\n        todo: ['uuid', 'group_seq', 'group_title', 'items']\r\n    },\r\n    init: async () => {\r\n        await api.doc.useServiceAccountAuth(API_KEY.GOOGLE_CONFIG);\r\n        await api.doc.loadInfo();\r\n    }\r\n}\r\n\r\nconst getToday = () => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${('0' + (today.getMonth() + 1)).slice(-2)}-${('0' + today.getDate()).slice(-2)}`\r\n}\r\n\r\nexport const emailExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nexport const passwordExp = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{10,12}$/;\r\n\r\nexport const findUserInGoogleSheet = (email) =>\r\n    new Promise(async (resolve, reject) => {\r\n        let auth = null;\r\n        if (email) {\r\n            await api.init();\r\n            await api.doc.sheetsByTitle[api.sheet.user].getRows()\r\n                .then(rows => {\r\n                    rows.forEach(row => {\r\n                        if (email === row.email) {\r\n                            auth = {};\r\n                            api.header.user.map(key =>\r\n                                auth[key] = row[key]\r\n                            )\r\n                            return;\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        }\r\n        resolve(auth);\r\n    })\r\n\r\nexport const appendUserInGoogleSheet = (email, name, password) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const uuid = `U-${v4()}`;\r\n        const salt = await createSaltKey();\r\n        const _password = await encodingPassword(salt, password);\r\n        const _author = await encodingAuthor(salt, 'user');\r\n        const registDate = getToday();\r\n        const auth = {\r\n            uuid,\r\n            name,\r\n            email,\r\n            salt,\r\n            password: _password,\r\n            author: _author,\r\n            registDate\r\n        };\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.user].addRow(auth)\r\n            .then(() => {\r\n                resolve({\r\n                    uuid: auth.uuid,\r\n                    name: auth.name,\r\n                    email: auth.email,\r\n                    author: auth.author\r\n                });\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            })\r\n    })\r\n\r\nexport const getTodoFromGoogleSheet = (uuid) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const groups = [];\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(rows => {\r\n                rows.forEach(row => {\r\n                    if (row.uuid === uuid) {\r\n                        const group = {};\r\n                        api.header.todo.forEach(key => {\r\n                            if (key === 'items') group[key] = JSON.parse(row[key])\r\n                            else group[key] = row[key]\r\n                        })\r\n                        groups.push(group);\r\n                    }\r\n                })\r\n                resolve(groups);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            })\r\n    })\r\n","const AUTH_KEY = \"react-todo-app-auth\";\r\nconst AUTO_SAVE = \"react-todo-app-auto-save\"\r\n\r\nconst stringfy = (object) => {\r\n    return JSON.stringify(object);\r\n}\r\n\r\nconst parse = (string) => {\r\n    return JSON.parse(string);\r\n}\r\n\r\nexport const getLocalAuth = () => {\r\n    return parse(localStorage.getItem(AUTH_KEY));\r\n}\r\n\r\nexport const setLocalAuth = (auth) => {\r\n    localStorage.setItem(AUTH_KEY, (stringfy(auth)));\r\n    return auth;\r\n}\r\n\r\nexport const removeLocalAuth = () => {\r\n    localStorage.removeItem(AUTH_KEY);\r\n    return null;\r\n}\r\n\r\nexport const setLocalAutoSave = (email) => {\r\n    localStorage.setItem(AUTO_SAVE, stringfy(email));\r\n    return email;\r\n}\r\n\r\nexport const getLocalAutoSave = () => {\r\n    return parse(localStorage.getItem(AUTO_SAVE));\r\n}\r\n\r\nexport const removeLocalAutoSave = () => {\r\n    localStorage.removeItem(AUTO_SAVE);\r\n    return null;\r\n}","import React from 'react';\r\n\r\nconst Modal = ({ visible, setVisible, children }) => {\r\n    return (\r\n        <>\r\n            <div className={visible ? \"modal-outter visible\" : \"modal-outter hidden\"} />\r\n            <div className={visible ? \"modal-wrapper visible\" : \"modal-wapper hidden\"}>\r\n                <div className=\"modal-inner\">\r\n                    <div className=\"modal-button-box\">\r\n                        <button className=\"modal-close-button\" onClick={() => setVisible('')}>X</button>\r\n                    </div>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { encodingPassword } from '../../util/encode';\r\nimport { emailExp, findUserInGoogleSheet } from '../../util/google.sheets';\r\nimport { getLocalAuth, getLocalAutoSave, removeLocalAutoSave, setLocalAuth, setLocalAutoSave } from '../../util/storage';\r\nimport Modal from '../Common/Modal';\r\n\r\nconst Login = () => {\r\n    const auth = getLocalAuth();\r\n    const autosave = getLocalAutoSave();\r\n\r\n    const [email, setEmail] = useState(autosave ? autosave : \"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [checked, setChecked] = useState(autosave ? true : false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n\r\n        if (email.match(emailExp) === null) {\r\n            setDisabled(false);\r\n            setError(\"입력하신 이메일을 다시 확인하세요.\");\r\n        } else {\r\n            await findUserInGoogleSheet(email)\r\n                .then(async _auth => {\r\n                    const _password = await encodingPassword(_auth.salt, password);\r\n\r\n                    if (_auth === null) {\r\n                        setDisabled(false);\r\n                        setError(\"이메일 계정이 존재하지 않습니다.\");\r\n                    } else if (_password !== _auth.password) {\r\n                        setDisabled(false);\r\n                        setError(\"비밀번호가 일치하지 않습니다.\");\r\n                    } else {\r\n                        if (checked) setLocalAutoSave(email);\r\n                        else removeLocalAutoSave();\r\n                        setDisabled(false);\r\n                        setLocalAuth(_auth);\r\n                        window.location.reload();\r\n                    }\r\n                })\r\n                .catch(_error => {\r\n                    setDisabled(false);\r\n                    setError(error)\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        auth === null\r\n            ? (\r\n                <div className=\"login\">\r\n                    <Modal visible={error ? true : false} setVisible={setError}>\r\n                        <p>{error}</p>\r\n                    </Modal>\r\n                    <form onSubmit={handleLogin}>\r\n                        <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)} />\r\n                            이메일 기억하기\r\n                        </label>\r\n                        <button type=\"submit\" disabled={disabled}>로그인</button>\r\n                    </form>\r\n                </div>\r\n            ) : (\r\n                <Redirect exact={true} to=\"/\" />\r\n            )\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { appendUserInGoogleSheet, emailExp, findUserInGoogleSheet, passwordExp } from '../../util/google.sheets';\r\nimport { getLocalAuth, setLocalAuth, setLocalAutoSave } from '../../util/storage';\r\nimport Modal from '../Common/Modal';\r\n\r\nconst Signup = () => {\r\n    const auth = getLocalAuth();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\")\r\n    const [passwordInit, setPasswordInit] = useState(\"\");\r\n    const [passwordLast, setPasswordLast] = useState(\"\");\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSignup = async (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n\r\n        if (email.match(emailExp) === null) {\r\n            setDisabled(false);\r\n            setError(\"입력하신 이메일을 다시 확인하세요.\");\r\n        } else if (name === \"\") {\r\n            setDisabled(false);\r\n            setError(\"이름을 입력하세요.\");\r\n        } else {\r\n            await findUserInGoogleSheet(email)\r\n                .then(async _auth => {\r\n                    if (_auth !== null) {\r\n                        setDisabled(false);\r\n                        setError(\"이미 존재하는 이메일 계정입니다.\");\r\n                    } else if (passwordInit !== passwordLast) {\r\n                        setDisabled(false);\r\n                        setError(\"비밀번호가 일치하지 않습니다.\");\r\n                    } else if (passwordInit.match(passwordExp) === null) {\r\n                        setDisabled(false);\r\n                        setError(\"비밀번호는 10자리 이상의 영문과 특수문자 조합으로 구성되어야 합니다.\");\r\n                    } else {\r\n                        await appendUserInGoogleSheet(email, name, passwordInit)\r\n                            .then(_auth => {\r\n                                setLocalAutoSave(email)\r\n                                setDisabled(false);\r\n                                setLocalAuth(_auth);\r\n                                window.location.reload();\r\n                            })\r\n                    }\r\n                })\r\n                .catch(_error => {\r\n                    setDisabled(false);\r\n                    setError(error)\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        auth === null\r\n            ? (\r\n                <div className=\"signup\">\r\n                    <Modal visible={error ? true : false} setVisible={setError}>\r\n                        <p>{error}</p>\r\n                    </Modal>\r\n                    <form onSubmit={handleSignup}>\r\n                        <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                        <input type=\"text\" value={name} onChange={(event) => setName(event.target.value)} />\r\n                        <input type=\"password\" value={passwordInit} onChange={(event) => setPasswordInit(event.target.value)} />\r\n                        <input type=\"password\" value={passwordLast} onChange={(event) => setPasswordLast(event.target.value)} />\r\n                        <button type=\"submit\" disabled={disabled}>회원가입</button>\r\n                    </form>\r\n                </div>\r\n\r\n            ) : (\r\n                <Redirect to=\"/\" />\r\n            )\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <>\r\n            <Route exact={true} path='/auth/login' component={Login} />\r\n            <Route exact={true} path=\"/auth/signup\" component={Signup} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            푸터\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getLocalAuth, removeLocalAuth } from '../../util/storage';\r\n\r\nconst LinkLogin = ({ auth }) => {\r\n    return (\r\n        auth === null\r\n            ? <Link to={{ pathname: \"/auth/login\", state: {} }}>로그인</Link>\r\n            : <></>\r\n    )\r\n}\r\n\r\nconst LinkSignup = ({ auth }) => {\r\n    return (\r\n        auth === null\r\n            ? <Link to={{ pathname: \"/auth/signup\", state: {} }}>회원가입</Link>\r\n            : <></>\r\n    )\r\n}\r\n\r\nconst LinkTodo = ({ auth }) => {\r\n    return (\r\n        auth === null\r\n            ? <></>\r\n            : <Link to={{ pathname: \"/todo\", state: {} }}>TODO</Link>\r\n    )\r\n}\r\n\r\nconst LinkLogout = ({ auth }) => {\r\n\r\n    const handleLogout = () => {\r\n        removeLocalAuth();\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        auth === null\r\n            ? <></>\r\n            : <Link to={{ pathname: \"/\", state: { auth } }} onClick={handleLogout}>로그아웃</Link>\r\n    )\r\n}\r\n\r\nconst Navbar = () => {\r\n    const auth = getLocalAuth();\r\n    return (\r\n        <ul className=\"navbar\">\r\n            <li>\r\n                <Link to={{ pathname: \"/\", state: { auth } }}>홈</Link>\r\n            </li>\r\n            <li>\r\n                <LinkLogin auth={auth} />\r\n            </li>\r\n            <li>\r\n                <LinkSignup auth={auth} />\r\n            </li>\r\n            <li>\r\n                <LinkTodo auth={auth} />\r\n            </li>\r\n            <li>\r\n                <LinkLogout auth={auth} />\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"header\">\r\n                <div className=\"header-title\">\r\n                    React Todo App\r\n                </div>\r\n                <Navbar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","const Home = () => {\r\n    return (\r\n        <div>\r\n            홈\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            404 : Page Not Found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// TODO\r\n/*\r\n    1. 그룹 추가 버튼 및 기능 구현\r\n*/\r\n\r\n// 새로고침 시 Route state 초기화로 인한 오류 방지\r\nlet temp = [];\r\n\r\nconst tempGroups = (groups) => {\r\n    if (groups) {\r\n        temp = groups;\r\n    }\r\n    return temp;\r\n}\r\n\r\nconst GroupList = ({ groups }) => {\r\n    const _groups = tempGroups(groups);\r\n\r\n    try {\r\n        return (\r\n            <ul className=\"group-list\">\r\n                {\r\n                    _groups.map((group, index) => (\r\n                        <li key={index}>\r\n                            <Link to={{\r\n                                pathname: `/todo/${group.group_seq}`,\r\n                                state: { ...group }\r\n                            }}>{group.group_title}</Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n    catch {\r\n        window.location.replace('/todo/')\r\n    }\r\n}\r\n\r\nexport default GroupList;","import React, { useState } from 'react';\r\n\r\nconst EditButton = ({ disabled, setDisabled, saveTodo }) => {\r\n    const handleEditMode = () => {\r\n        setDisabled(false);\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        console.log(\"삭제할건지 물어보고 삭제\")\r\n    }\r\n\r\n    const handleComplete = () => {\r\n        saveTodo();\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setDisabled(true);\r\n    }\r\n\r\n    return (\r\n        disabled\r\n            ? (\r\n                <>\r\n                    <button onClick={handleEditMode}>수정</button>\r\n                    <button onClick={handleRemove}>삭제</button>\r\n                </>\r\n            )\r\n            : (\r\n                <>\r\n                    <button onClick={handleComplete}>완료</button>\r\n                    <button onClick={handleCancel}>취소</button>\r\n                </>\r\n            )\r\n    )\r\n}\r\n\r\nconst TodoItem = ({ index, todo, updateGroup }) => {\r\n    const [done, setDone] = useState(todo.done)\r\n    const [text, setText] = useState(todo.text)\r\n    const [description, setDescriptioin] = useState(todo.description)\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const changeDone = () => {\r\n        todo.done = !todo.done;\r\n        updateGroup(index, todo);\r\n        setDone(!done);\r\n    }\r\n\r\n    const saveTodo = () => {\r\n        todo.text = text;\r\n        todo.description = description;\r\n        updateGroup(index, todo);\r\n        setDisabled(true);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        saveTodo();\r\n    }\r\n\r\n    const textareaKeyPress = (event) => {\r\n        if (event.which === 13 && !event.shiftKey) {\r\n            event.preventDefault();\r\n            saveTodo();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <form className=\"todo-item-form\" onSubmit={handleSubmit}>\r\n                <div className=\"todo-item-inputs\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={done}\r\n                        onChange={changeDone}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={text}\r\n                        onChange={(event) => setText(event.target.value)}\r\n                        disabled={disabled}\r\n                    />\r\n                </div>\r\n                <div className=\"todo-item-textarea\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={(event) => setDescriptioin(event.target.value)}\r\n                        onKeyPress={textareaKeyPress}\r\n                        disabled={disabled}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <EditButton\r\n                disabled={disabled}\r\n                setDisabled={setDisabled}\r\n                saveTodo={saveTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React, { useState } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\n// TODO\r\n/*\r\n    1. 제목 수정, 그룹 삭제 버튼 및 기능 구현\r\n*/\r\n\r\n// 새로고침 시 Route state 초기화로 인한 오류 방지\r\nlet temp = { uuid: null, group_title: '', group_seq: null, items: [] };\r\n\r\nconst tempGroup = (group) => {\r\n    if (group) {\r\n        temp = group;\r\n    }\r\n    return temp;\r\n}\r\n\r\nconst GroupItem = ({ location }) => {\r\n    const [group, setGroup] = useState(tempGroup(location.state));\r\n\r\n    const [title, setTitle] = useState(group.group_title);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [text, setText] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    if (temp.uuid === null) window.location.replace('#/todo/');\r\n\r\n    const updateGroup = (index, todo) => {\r\n        const _group = { ...group }\r\n        _group.items[index] = todo;\r\n        console.log(todo)\r\n        setGroup(_group)\r\n    }\r\n\r\n    const pushTodo = () => {\r\n        const todo = {\r\n            text,\r\n            description,\r\n            done: false\r\n        }\r\n        const _group = { ...group }\r\n        _group.items.push(todo);\r\n        setGroup(_group);\r\n        setText('');\r\n        setDescription('');\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        pushTodo();\r\n    }\r\n\r\n    const handleTitleChange = (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n    }\r\n\r\n    const textareaKeyPress = (event) => {\r\n        if (event.which === 13 && !event.shiftKey) {\r\n            event.preventDefault();\r\n            pushTodo();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"group-item\">\r\n            <form onSubmit={handleTitleChange}>\r\n                <input type=\"text\" value={title} onChange={(event) => setTitle(event.target.value)} disabled={disabled} />\r\n            </form>\r\n            {\r\n                group.items.map((todo, index) => (\r\n                    <TodoItem key={index} index={index} todo={todo} updateGroup={updateGroup} />\r\n                ))\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onChange={(event) => setText(event.target.value)}\r\n                />\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(event) => setDescription(event.target.value)}\r\n                    onKeyPress={textareaKeyPress}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupItem;","import React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router';\r\nimport GroupList from './GroupList';\r\nimport GroupItem from './GroupItem';\r\nimport { getLocalAuth } from '../../util/storage';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getTodoFromGoogleSheet } from '../../util/google.sheets';\r\n\r\nconst Todo = () => {\r\n    const auth = getLocalAuth();\r\n    const uuid = auth ? auth.uuid : null;\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const asyncFunction = async () => {\r\n            await getTodoFromGoogleSheet(uuid)\r\n                .then(_groups => {\r\n                    setGroups(_groups);\r\n                })\r\n        }\r\n        asyncFunction();\r\n    }, [uuid])\r\n\r\n    console.log(groups);\r\n\r\n    return (\r\n        auth === null\r\n            ? (\r\n                <Redirect to='/auth/login/' />\r\n\r\n            ) : (\r\n                <div className=\"todo\">\r\n                    <GroupList groups={groups} />\r\n                    <Route exact={true} path='/todo/:seq' component={GroupItem} />\r\n                </div>\r\n            )\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from './components/Auth';\nimport Footer from \"./components/Common/Footer\";\nimport Header from \"./components/Common/Header\";\nimport Home from './components/Common/Home';\nimport Page404 from './components/Common/Page404';\nimport Todo from './components/Todo';\n\nconst App = () => {\n  // 이거 다시 적용하는 거 검토\n  // 아, auth만 사용하는 걸로\n  // 왜냐하면 새로고침하거나 바로 진입할 경우 location.state props 못 받음.\n\n  return (\n    <div className=\"App\">\n      <Header />\n      < main className=\"main\">\n        <Switch>\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route path=\"/auth/\" component={Auth} />\n          <Route path=\"/todo/\" component={Todo} />\n          <Route path=\"/\" component={Page404} />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}