{"version":3,"sources":["components/Common/Footer.js","util/storage.js","context/AuthContext.js","components/Common/Navbar.js","components/Common/Header.js","components/Common/Home.js","components/Common/Page404.js","components/Auth/FindPassword.js","util/encode.js","util/expression.js","util/google.sheets.js","components/Auth/LoginHeader.js","components/Auth/LoginTemplate.js","components/Auth/SignupHeader.js","components/Auth/SignupTemplate.js","routes/AuthRoute.js","context/TodoContext.js","components/Group/GroupAppend.js","components/Group/GroupHeader.js","components/Group/GroupItem.js","components/Group/GroupList.js","components/Group/GroupNotFound.js","components/Group/GroupTemplate.js","components/Todo/TodoAppend.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Todo/TodoNotFound.js","components/Todo/TodoTitle.js","components/Todo/TodoTemplate.js","routes/TodoRoute.js","App.js","index.js"],"names":["FooterWrapper","styled","div","Footer","AUTH_KEY","AUTO_SAVE","stringfy","object","JSON","stringify","parse","string","setLocalAuth","auth","localStorage","setItem","initAuth","getItem","Reducer","state","action","type","check","email","removeItem","Error","AuthStateContext","createContext","AuthDispatchContext","AuthProvider","children","useReducer","dispatch","Provider","value","useAuthState","useContext","useAuthDispatch","NavbarWrapper","ul","NavbarItem","li","NavbarLink","Link","Navbar","to","onClick","HeaderBackground","HeaderWrapper","Header","Wrapper","Home","Page404","FindPassword","encodingPassword","salt","password","Promise","resolve","reject","pbkdf2","ENCODE_CONFIG","ITER","LENGTH","DIGEST","error","key","_password","toString","STRING_TYPE","encodingAuthor","author","_author","EMAIL_EXP","PASSWORD_EXP","api","doc","GoogleSpreadsheet","API_KEY","GOOGLE_SHEET_ID","sheet","user","todo","header","init","a","useServiceAccountAuth","GOOGLE_CONFIG","loadInfo","getToday","today","Date","getFullYear","getMonth","slice","getDate","findUserInGoogleSheet","sheetsByTitle","getRows","then","rows","forEach","row","map","catch","appendUserInGoogleSheet","name","uuid","v4","randomBytes","buffer","registDate","addRow","getTodosFromGoogleSheet","groups","group","push","LoginHeaderWrapper","LoginHeader","LoginForm","form","LoginLabel","props","css","LoginInput","input","LoginCheck","LoginButton","button","LoginTemplate","save","useState","setEmail","setPassword","setCheck","disable","setDisable","emailError","setEmailError","passwordError","setPasswordError","onLogin","event","preventDefault","errors","join","onSubmit","onChange","target","match","disabled","checked","SignupHeaderWrapper","SignupHeader","SignupForm","SignupLabel","SignupInput","SignupButton","SignupTemplate","setName","firstPassword","setFirstPassword","lastPassword","setLastPassword","nameError","setNameError","firstPasswordError","setFirstPasswordError","lastPasswordError","setLastPasswordError","onSignup","AuthRoute","exact","path","component","initTodos","id","title","todos","concat","text","done","group_id","todo_id","index","splice","TodoStateContext","TodoDispatchContext","TodoProvider","useTodoState","context","useTodoDispatch","GroupAppendForm","GroupAppendInput","GroupAppendButton","open","GroupAppend","setTitle","setOpen","autoFocus","placeholder","GroupHeaderWrapper","GroupHeader","RemoveButton","EditButton","SaveButton","CancelButton","GroupItemWapper","GroupText","GroupLink","GroupForm","GroupInput","GroupItem","edit","setEdit","editTitle","setEditTitle","GroupListWrapper","GroupList","GroupNotFound","GroupTemplate","filter","undefined","TodoAppendForm","TodoAppendInput","TodoAppendButton","TodoAppend","setText","memo","TodoItemWapper","TodoCheckBox","TodoText","TodoForm","TodoInput","TodoItem","editText","setEditText","onSave","TodoListWrapper","TodoList","TodoNotFound","TodoTitleWrapper","BackLink","TodoTitle","TodoTemplate","location","queryString","search","TodoRoute","setInit","useEffect","console","log","Init","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c9e40f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterWrapper = styled.div`\r\n    display: grid;\r\n    margin-top: auto;\r\n    padding: 50px 0;\r\n    font-size: 15px;\r\n    text-align: center;\r\n    line-height: 1.8;\r\n    place-content: center;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 13px;\r\n    }\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            푸터\r\n        </FooterWrapper>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","const AUTH_KEY = \"react-todo-app-auth\";\r\nconst AUTO_SAVE = \"react-todo-app-save\"\r\n\r\nconst stringfy = (object) => {\r\n    return JSON.stringify(object);\r\n}\r\n\r\nconst parse = (string) => {\r\n    return JSON.parse(string);\r\n}\r\n\r\nexport const getLocalAuth = () => {\r\n    return parse(localStorage.getItem(AUTH_KEY));\r\n}\r\n\r\nexport const setLocalAuth = (auth) => {\r\n    localStorage.setItem(AUTH_KEY, (stringfy(auth)));\r\n    return auth;\r\n}\r\n\r\nexport const removeLocalAuth = () => {\r\n    localStorage.removeItem(AUTH_KEY);\r\n    return null;\r\n}\r\n\r\nexport const setLocalSave = (email) => {\r\n    localStorage.setItem(AUTO_SAVE, stringfy(email));\r\n    return email;\r\n}\r\n\r\nexport const getLocalSave = () => {\r\n    return parse(localStorage.getItem(AUTO_SAVE));\r\n}\r\n\r\nexport const removeLocalSave = () => {\r\n    localStorage.removeItem(AUTO_SAVE);\r\n    return null;\r\n}","import React, { createContext, useContext, useReducer } from 'react';\r\nimport { getLocalAuth, removeLocalAuth, removeLocalSave, setLocalAuth, setLocalSave } from '../util/storage';\r\n\r\nconst initAuth = getLocalAuth();\r\n\r\nfunction Reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_LOGIN\":\r\n            setLocalAuth(action.auth);\r\n            if (action.check) setLocalSave(action.auth.email)\r\n            else removeLocalSave();\r\n            return action.auth;\r\n\r\n        case \"AUTH_SIGNUP\":\r\n            setLocalAuth(action.auth);\r\n            return action.auth;\r\n\r\n        case \"AUTH_LOGOUT\":\r\n            removeLocalAuth();\r\n            return null;\r\n\r\n        case \"AUTH_REMOVE\":\r\n            // {uuid, }\r\n            return state;\r\n\r\n        case \"AUTH_CHANGE\":\r\n            // {uuid, auth}\r\n            return state;\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n}\r\n\r\nconst AuthStateContext = createContext();\r\nconst AuthDispatchContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [state, dispatch] = useReducer(Reducer, initAuth);\r\n    return (\r\n        <AuthStateContext.Provider value={state}>\r\n            <AuthDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </AuthDispatchContext.Provider>\r\n        </AuthStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuthState = () => {\r\n    return useContext(AuthStateContext);\r\n}\r\n\r\nexport const useAuthDispatch = () => {\r\n    return useContext(AuthDispatchContext);\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\n\r\nconst NavbarWrapper = styled.ul`\r\n    list-style-type: none;\r\n    width: 300px;\r\n    margin: 10px 0;\r\n    padding: 10px 0;\r\n`\r\nconst NavbarItem = styled.li`\r\n    float: left;\r\n`\r\nconst NavbarLink = styled(Link)`\r\n    display: block;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    padding: 0 20px;\r\n    text-align: center;\r\n`\r\n\r\nconst Navbar = ({ auth }) => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const onLogout = () => {\r\n        dispatch({ type: \"AUTH_LOGOUT\" })\r\n    }\r\n\r\n    return (\r\n        <NavbarWrapper>\r\n            <NavbarItem>\r\n                <NavbarLink to=\"/\">홈</NavbarLink>\r\n            </NavbarItem>\r\n            {\r\n                auth === null\r\n                    ? (\r\n                        <>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/auth/login\">로그인</NavbarLink>\r\n                            </NavbarItem>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/auth/signup\">회원가입</NavbarLink>\r\n                            </NavbarItem>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/todo/groups/\">TODO</NavbarLink>\r\n                            </NavbarItem>\r\n                            <NavbarItem>\r\n                                <NavbarLink to=\"/\" onClick={onLogout}>로그아웃</NavbarLink>\r\n                            </NavbarItem>\r\n                        </>\r\n                    )\r\n            }\r\n        </NavbarWrapper>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Navbar from './Navbar';\r\n\r\nconst HeaderBackground = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\r\n    color: #ffffff;\r\n`\r\nconst HeaderWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: left;\r\n    align-items: center;\r\n    width: 768px;\r\n    height: 80px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        height: 300px;\r\n        padding: 0 20px;\r\n    }\r\n\r\n    h1 {\r\n        margin-right: 50px;\r\n        font-size: 35px;\r\n        font-weight: 700;\r\n        text-align: left;\r\n    \r\n        @media (max-width: 768px) {\r\n            font-size: 25px;\r\n        }\r\n    }\r\n\r\n    h2 {\r\n        font-size: 20px;\r\n        font-weight: 400;\r\n        text-align: center;\r\n\r\n        @media (max-width: 768px) {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n`\r\n\r\nconst Header = ({ auth }) => {\r\n    return (\r\n        <HeaderBackground>\r\n            <HeaderWrapper>\r\n                <h1>React Todo App</h1>\r\n                <Navbar auth={auth} />\r\n            </HeaderWrapper>\r\n        </HeaderBackground>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Wrapper>\r\n            홈\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <Wrapper>\r\n            404 : Page Not Found\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst FindPassword = () => {\r\n    return (\r\n        <Wrapper>\r\n            (기능 구현 중 ... 🤔)\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default FindPassword;","import { pbkdf2, randomBytes } from \"crypto\";\r\nimport ENCODE_CONFIG from './encode.config.json';\r\n\r\nexport const createSaltKey = () =>\r\n    new Promise((resolve, reject) => {\r\n        randomBytes(64, (error, buffer) => {\r\n            const salt = `S-${buffer.toString('base64')}`\r\n            if (error) reject(error);\r\n            resolve(salt);\r\n        })\r\n    })\r\n\r\nexport const encodingPassword = (salt, password) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(password, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _password = `P-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_password);\r\n        })\r\n    })\r\n\r\nexport const encodingAuthor = (salt, author) =>\r\n    new Promise((resolve, reject) => {\r\n        pbkdf2(author, salt, ENCODE_CONFIG.ITER, ENCODE_CONFIG.LENGTH, ENCODE_CONFIG.DIGEST, (error, key) => {\r\n            const _author = `A-${key.toString(ENCODE_CONFIG.STRING_TYPE)}`;\r\n            if (error) reject(error);\r\n            else resolve(_author);\r\n        })\r\n    })","export const EMAIL_EXP = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nexport const PASSWORD_EXP = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{10,12}$/;\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { createSaltKey, encodingAuthor, encodingPassword } from \"./encode\";\r\nimport API_KEY from './google.sheets.key.json';\r\nimport { v4 } from 'uuid';\r\n\r\nconst api = {\r\n    doc: new GoogleSpreadsheet(API_KEY.GOOGLE_SHEET_ID),\r\n    sheet: {\r\n        user: \"user\",\r\n        todo: \"todo\"\r\n    },\r\n    header: {\r\n        user: ['uuid', 'email', 'name', 'salt', 'password', 'registDate', 'author'],\r\n        todo: ['uuid', 'id', 'title', 'todos']\r\n    },\r\n    init: async () => {\r\n        await api.doc.useServiceAccountAuth(API_KEY.GOOGLE_CONFIG);\r\n        await api.doc.loadInfo();\r\n    }\r\n}\r\n\r\nconst getToday = () => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${('0' + (today.getMonth() + 1)).slice(-2)}-${('0' + today.getDate()).slice(-2)}`\r\n}\r\n\r\nexport const emailExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nexport const passwordExp = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{10,12}$/;\r\n\r\nexport const findUserInGoogleSheet = (email) =>\r\n    new Promise(async (resolve, reject) => {\r\n        let auth = null;\r\n        if (email) {\r\n            await api.init();\r\n            await api.doc.sheetsByTitle[api.sheet.user].getRows()\r\n                .then(rows => {\r\n                    rows.forEach(row => {\r\n                        if (email === row.email) {\r\n                            auth = {};\r\n                            api.header.user.map(key =>\r\n                                auth[key] = row[key]\r\n                            )\r\n                            return;\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => reject(error))\r\n        }\r\n        resolve(auth);\r\n    })\r\n\r\nexport const appendUserInGoogleSheet = (email, name, password) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const uuid = `U-${v4()}`;\r\n        const salt = await createSaltKey();\r\n        const _password = await encodingPassword(salt, password);\r\n        const _author = await encodingAuthor(salt, 'user');\r\n        const registDate = getToday();\r\n        const auth = {\r\n            uuid,\r\n            name,\r\n            email,\r\n            salt,\r\n            password: _password,\r\n            author: _author,\r\n            registDate\r\n        };\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.user].addRow(auth)\r\n            .then(() => {\r\n                resolve(auth);\r\n            })\r\n            .catch(error => reject(error))\r\n    })\r\n\r\nexport const getTodosFromGoogleSheet = (uuid) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const groups = [];\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(rows => {\r\n                rows.forEach(row => {\r\n                    if (row.uuid === uuid) {\r\n                        const group = {};\r\n                        api.header.todo.forEach(key => {\r\n                            if (key === 'todos') group[key] = JSON.parse(row[key])\r\n                            else group[key] = row[key]\r\n                        })\r\n                        groups.push(group);\r\n                    }\r\n                })\r\n                resolve(groups);\r\n            })\r\n            .catch(error => reject(error))\r\n    })\r\n\r\nexport const appendGroupToGoogleSheet = (uuid, group_title) =>\r\n    new Promise(async (resolve, reject) => {\r\n        const group = {\r\n            uuid,\r\n            group_seq: `G-${v4()}`,\r\n            group_title,\r\n            items: '[]'\r\n        }\r\n\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].addRow(group)\r\n            .then(() => resolve(group))\r\n            .catch(error => reject(error));\r\n    });\r\n\r\nexport const editGroupTitleInGoogleSheet = (uuid, group_seq, title) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.group_seq === group_seq) {\r\n                        index = _index\r\n                    }\r\n                });\r\n                groups[index].group_title = title;\r\n                await groups[index].save();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    });\r\n\r\nexport const removeGroupFromGoogleSheet = (uuid, group_seq) =>\r\n    new Promise(async (resolve, reject) => {\r\n        await api.init();\r\n        await api.doc.sheetsByTitle[api.sheet.todo].getRows()\r\n            .then(async groups => {\r\n                let index = 0;\r\n                groups.forEach((group, _index) => {\r\n                    if (group.uuid === uuid && group.group_seq === group_seq) {\r\n                        index = _index\r\n                        return\r\n                    }\r\n                });\r\n                await groups[index].delete();\r\n                resolve();\r\n            })\r\n            .catch(error => reject(error));\r\n    })","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LoginHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    \r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst LoginHeader = () => {\r\n    return (\r\n        <LoginHeaderWrapper>\r\n            <h1>로그인</h1>\r\n        </LoginHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default LoginHeader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\nimport { encodingPassword } from '../../util/encode';\r\nimport { EMAIL_EXP, PASSWORD_EXP } from '../../util/expression';\r\nimport { findUserInGoogleSheet } from '../../util/google.sheets';\r\nimport { getLocalSave } from '../../util/storage';\r\nimport LoginHeader from './LoginHeader';\r\n\r\nconst LoginForm = styled.form`\r\n    background: white;\r\n\r\n    width: 100%;\r\n    max-width: 500px;\r\n\r\n    margin: 0 auto;\r\n\r\n    padding-top: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nconst LoginLabel = styled.div`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            color: red;\r\n        `\r\n    } \r\n`\r\n\r\nconst LoginInput = styled.input`\r\n    padding: 12px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            border: 1px solid red;\r\n            color: red;\r\n        `\r\n    } \r\n`\r\n\r\nconst LoginCheck = styled.div`\r\n    display: flex;\r\n    flex-direction: initial;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;    \r\n\r\n    input {\r\n        width: 20px;\r\n        height: 20px;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    margin: 10px 0;\r\n`\r\n\r\nconst LoginButton = styled.button`\r\n    padding: 12px;\r\n    margin: 10px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    background-color: #38d9a9;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n`\r\n\r\nconst LoginTemplate = () => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const save = getLocalSave();\r\n\r\n    const [email, setEmail] = useState(save === null ? '' : save);\r\n    const [password, setPassword] = useState('');\r\n    const [check, setCheck] = useState(save === null ? false : true)\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const onEmail = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setEmail(value);\r\n\r\n        if (value === '')\r\n            setEmailError('이메일을 입력하세요.')\r\n        else if (value.match(EMAIL_EXP) === null)\r\n            setEmailError('이메일 형식에 맞지 않습니다.')\r\n        else setEmailError('');\r\n    };\r\n    const onPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setPassword(value);\r\n\r\n        if (value === '')\r\n            setPasswordError('비밀번호를 입력하세요.')\r\n        else if (value.match(PASSWORD_EXP) === null)\r\n            setPasswordError('비밀번호를 다시 확인하세요.')\r\n        else setPasswordError('')\r\n    };\r\n    const onCheck = (event) => setCheck(event.target.value);\r\n    const onLogin = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const errors = [\r\n            emailError,\r\n            passwordError\r\n        ].join('');\r\n\r\n        let error = '';\r\n\r\n        if (email === '') {\r\n            error = \"이메일을 입력하세요.\"\r\n            setEmailError(error);\r\n        }\r\n\r\n        if (password === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setPasswordError(error);\r\n        }\r\n\r\n        if (errors + error === '') {\r\n            setDisable(true)\r\n            const auth = await findUserInGoogleSheet(email)\r\n            if (auth === null) {\r\n                setEmailError('존재하지 않은 이메일 계정입니다.')\r\n                setDisable(false)\r\n            } else if (await encodingPassword(auth.salt, password) !== auth.password) {\r\n                setPasswordError('비밀번호가 일치하지 않습니다.')\r\n                setDisable(false)\r\n            } else {\r\n                dispatch({ type: \"AUTH_LOGIN\", auth, check })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginHeader />\r\n            <LoginForm onSubmit={onLogin}>\r\n                <LoginLabel error={emailError}>\r\n                    {\r\n                        emailError\r\n                            ? emailError\r\n                            : (\"이메일\")\r\n                    }\r\n                </LoginLabel>\r\n                <LoginInput type=\"text\" error={emailError} value={email} onChange={onEmail} disabled={disable} />\r\n\r\n                <LoginLabel error={passwordError}>\r\n                    {\r\n                        passwordError\r\n                            ? passwordError\r\n                            : (\"비밀번호\")\r\n                    }\r\n                </LoginLabel>\r\n                <LoginInput type=\"password\" error={passwordError} value={password} onChange={onPassword} disabled={disable} />\r\n\r\n                <LoginCheck>\r\n                    <LoginInput type=\"checkbox\" value={check} onChange={onCheck} checked={check} disabled={disable} />\r\n                    이메일 기억하기\r\n                </LoginCheck>\r\n                <LoginButton type=\"submit\" disabled={disable}>로그인</LoginButton>\r\n            </LoginForm >\r\n            <Link to=\"/auth/signup/\">회원가입</Link>\r\n            <Link to=\"/auth/find-password/\">비밀번호 찾기</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginTemplate;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SignupHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n        text-align: center;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst SignupHeader = () => {\r\n    return (\r\n        <SignupHeaderWrapper>\r\n            <h1>회원가입</h1>\r\n        </SignupHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default SignupHeader;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useAuthDispatch } from '../../context/AuthContext';\r\nimport { EMAIL_EXP, PASSWORD_EXP } from '../../util/expression';\r\nimport { appendUserInGoogleSheet, findUserInGoogleSheet } from '../../util/google.sheets';\r\nimport SignupHeader from './SignupHeader';\r\n\r\nconst SignupForm = styled.form`\r\n    background: #f8f9fa;\r\n\r\n    width: 100%;\r\n    max-width: 500px;\r\n\r\n    margin: 0 auto;\r\n\r\n    padding-top: 32px;\r\n    padding-bottom: 72px;\r\n    \r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst SignupLabel = styled.div`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            color: red;\r\n        `\r\n    } \r\n`;\r\n\r\nconst SignupInput = styled.input`\r\n    padding: 12px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n\r\n    ${props =>\r\n        props.error &&\r\n        css`\r\n            border: 1px solid red;\r\n            color: red;\r\n        `\r\n    } \r\n`;\r\n\r\nconst SignupButton = styled.button`\r\n    padding: 12px;\r\n    margin: 10px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    background-color: #38d9a9;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n`;\r\n\r\nconst SignupTemplate = () => {\r\n    const dispatch = useAuthDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [firstPassword, setFirstPassword] = useState('');\r\n    const [lastPassword, setLastPassword] = useState('');\r\n\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [nameError, setNameError] = useState('');\r\n    const [firstPasswordError, setFirstPasswordError] = useState('');\r\n    const [lastPasswordError, setLastPasswordError] = useState('');\r\n\r\n    const onEmail = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setEmail(value);\r\n\r\n        if (value === '')\r\n            setEmailError('이메일을 입력하세요.')\r\n        else if (value.match(EMAIL_EXP) === null)\r\n            setEmailError('이메일 형식에 맞지 않습니다.');\r\n        else setEmailError('');\r\n    };\r\n\r\n    const onName = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setName(value)\r\n\r\n        if (value === '')\r\n            setNameError('이름을 입력하세요.')\r\n        else setNameError('');\r\n    };\r\n\r\n    const onFirstPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setFirstPassword(value);\r\n\r\n        if (value === '')\r\n            setFirstPasswordError('비밀번호를 입력하세요.')\r\n        else if (value.match(PASSWORD_EXP) === null)\r\n            setFirstPasswordError('비밀번호 형식에 맞지 않습니다.')\r\n        else setFirstPasswordError('');\r\n    };\r\n\r\n    const onLastPassword = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setLastPassword(event.target.value)\r\n\r\n        if (value === '')\r\n            setLastPasswordError('비밀번호를 입력하세요.')\r\n        else if (value !== firstPassword)\r\n            setLastPasswordError('비밀번호가 일치하지 않습니다.')\r\n        else setLastPasswordError('');\r\n    }\r\n\r\n    const onSignup = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const errors = [\r\n            emailError,\r\n            nameError,\r\n            firstPasswordError,\r\n            lastPasswordError\r\n        ].join('');\r\n\r\n        let error = \"\";\r\n\r\n        if (email === '') {\r\n            error = \"이메일을 입력하세요.\"\r\n            setEmailError(error)\r\n        }\r\n\r\n        if (name === '') {\r\n            error = \"이름을 입력하세요.\"\r\n            setNameError(error)\r\n        }\r\n\r\n        if (firstPasswordError === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setFirstPasswordError(error)\r\n        }\r\n\r\n        if (lastPasswordError === '') {\r\n            error = \"비밀번호를 입력하세요.\"\r\n            setLastPasswordError(error);\r\n        }\r\n\r\n        if (errors + error === '') {\r\n            setDisable(true)\r\n            const _auth = await findUserInGoogleSheet(email)\r\n\r\n            if (_auth) {\r\n                setEmailError('이미 존재하는 이메일 계정입니다.')\r\n                setDisable(false)\r\n            } else {\r\n                const auth = await appendUserInGoogleSheet(email, name, firstPassword);\r\n                dispatch({ type: \"AUTH_SIGNUP\", auth });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SignupHeader />\r\n            <SignupForm onSubmit={onSignup}>\r\n                <SignupLabel error={emailError}>\r\n                    {\r\n                        emailError\r\n                            ? emailError\r\n                            : (\"이메일\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"text\" error={emailError} value={email} onChange={onEmail} disabled={disable} />\r\n\r\n                <SignupLabel error={nameError}>\r\n                    {\r\n                        nameError\r\n                            ? nameError\r\n                            : (\"이름\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"name\" error={nameError} value={name} onChange={onName} disabled={disable} />\r\n\r\n                <SignupLabel error={firstPasswordError}>\r\n                    {\r\n                        firstPasswordError\r\n                            ? firstPasswordError\r\n                            : (\"비밀번호\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"password\" error={firstPasswordError} value={firstPassword} onChange={onFirstPassword} disabled={disable} />\r\n\r\n                <SignupLabel error={lastPasswordError}>\r\n                    {\r\n                        lastPasswordError\r\n                            ? lastPasswordError\r\n                            : (\"비밀번호 재입력\")\r\n                    }\r\n                </SignupLabel>\r\n                <SignupInput type=\"password\" error={lastPasswordError} value={lastPassword} onChange={onLastPassword} disabled={disable} />\r\n                <SignupButton type=\"submit\" disabled={disable}>완료</SignupButton>\r\n            </SignupForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupTemplate","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport FindPassword from '../components/Auth/FindPassword';\r\nimport LoginTemplate from '../components/Auth/LoginTemplate';\r\nimport SignupTemplate from '../components/Auth/SignupTemplate';\r\nimport { useAuthState } from '../context/AuthContext';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst AuthRoute = () => {\r\n\r\n    const auth = useAuthState();\r\n\r\n    if (auth) {\r\n        return <Redirect exact={true} to=\"/\" />\r\n    } else {\r\n        return (\r\n            <Wrapper>\r\n                <Switch>\r\n                    <Route path=\"/auth/login/\" component={LoginTemplate} />\r\n                    <Route path=\"/auth/signup/\" component={SignupTemplate} />\r\n                    <Route path=\"/auth/find-password/\" component={FindPassword} />\r\n                </Switch>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthRoute;","import React, { useContext, createContext, useReducer } from 'react';\r\nimport { v4 } from 'uuid';\r\n\r\nconst initTodos = [];\r\n\r\nfunction Reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"INIT\":\r\n            return action.groups\r\n\r\n        case \"GROUP_APPEND\":\r\n            const group = {\r\n                id: `G-${v4()}`,\r\n                title: action.title,\r\n                todos: []\r\n            }\r\n            return state.concat(group)\r\n\r\n        case \"GROUP_CHANGE\":\r\n            return state\r\n\r\n        case \"GROUP_REMOVE\":\r\n            return state\r\n\r\n        case \"TODO_APPEND\":\r\n            const todo = {\r\n                id: `T-${v4()}`,\r\n                text: action.text,\r\n                done: false\r\n            }\r\n\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos = [...group.todos, todo]\r\n                }\r\n                return group\r\n            })\r\n        case \"TODO_CHECK\":\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos.map(todo => {\r\n                        if (todo.id === action.todo_id) {\r\n                            todo.done = !todo.done\r\n                        }\r\n                        return todo\r\n                    })\r\n                }\r\n                return group\r\n            });\r\n        case \"TODO_REMOVE\":\r\n            return state.map(group => {\r\n                if (group.id === action.group_id) {\r\n                    group.todos.forEach((todo, index) => {\r\n                        if (todo.id === action.todo_id) {\r\n                            group.todos.splice(index, 1)\r\n                            return\r\n                        }\r\n                    })\r\n                }\r\n                return group\r\n            });\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(Reducer, initTodos);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport const useTodoDispatch = () => {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}","import React, { useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\n\r\nconst GroupAppendForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst GroupAppendInput = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst GroupAppendButton = styled.button`\r\n    background: #38d9a9;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n                background: #ff6b6b;\r\n                &:hover {\r\n                    background: #ff8787;\r\n                }\r\n\r\n                &:active {\r\n                    background: #fa5252;\r\n                }\r\n\r\n                transform: translate(-50%, 50%) rotate(45deg);\r\n            `\r\n    }\r\n`;\r\n\r\n/* 재사용 \r\n    const onAppend = (event) => {\r\n        event.preventDefault();\r\n        if (title) {\r\n            dispatch({\r\n                type: \"GROUP_APPEND\",\r\n                title\r\n            })\r\n            setTitle(\"\");\r\n        }\r\n    }\r\n    */\r\n\r\nconst GroupAppend = () => {\r\n    const dispatch = useTodoDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const onAppend = (event) => {\r\n        event.preventDefault();\r\n        if (title) {\r\n            dispatch({\r\n                type: \"TODO_APPEND\",\r\n                title\r\n            })\r\n            setTitle(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                open && (\r\n                    <GroupAppendForm onSubmit={onAppend}>\r\n                        <GroupAppendInput\r\n                            autoFocus\r\n                            placeholder=\"새 그룹 추가\"\r\n                            value={title}\r\n                            onChange={event => setTitle(event.target.value)}\r\n                        />\r\n                    </GroupAppendForm>\r\n                )\r\n            }\r\n            <GroupAppendButton open={open} onClick={() => setOpen(!open)}>\r\n                <MdAdd />\r\n            </GroupAppendButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupAppend;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GroupHeaderWrapper = styled.div`\r\n    padding-top: 24px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        text-align: center;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`\r\nconst GroupHeader = () => {\r\n    return (\r\n        <GroupHeaderWrapper>\r\n            <h1>Todo Groups</h1>\r\n        </GroupHeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default GroupHeader;","import React, { useState } from 'react';\r\nimport { MdCancel, MdDelete, MdEdit, MdSave } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\n\r\nconst RemoveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst EditButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst SaveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst GroupItemWapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${EditButton},\r\n        ${RemoveButton} {\r\n            display: initial;\r\n        }\r\n    }\r\n`\r\nconst GroupText = styled.div`\r\n    flex: 1;\r\n    font-size: 16px;\r\n    color: #495057;\r\n`;\r\n\r\nconst GroupLink = styled(Link)`\r\n    text-decoration: none;\r\n`;\r\n\r\nconst GroupForm = styled.form`\r\n    flex: 1; {\r\n`\r\n\r\nconst GroupInput = styled.input`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    color: #495057;\r\n`;\r\n\r\nconst GroupItem = ({ group_id, title }) => {\r\n    const dispatch = useTodoDispatch();\r\n    const [edit, setEdit] = useState(false);\r\n    const [editTitle, setEditTitle] = useState(title);\r\n\r\n    const onTitleChange = (event) => setEditTitle(event.target.value)\r\n    const onEdit = () => setEdit(true);\r\n    const onRemove = () => dispatch({ type: \"GROUP_REMOVE\", group_id })\r\n    const onSave = (event) => {\r\n        event.preventDefault();\r\n        setEdit(false);\r\n\r\n    }\r\n    const onCancel = () => {\r\n        setEditTitle(title);\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <GroupItemWapper>\r\n            {\r\n                edit\r\n                    ? (\r\n                        <GroupForm>\r\n                            <GroupInput type=\"text\" value={editTitle} onChange={onTitleChange} />\r\n                        </GroupForm>\r\n                    ) : (\r\n                        <GroupText>\r\n                            <GroupLink\r\n\r\n                                to={`/todo/?group_id=${group_id}`}\r\n                            >\r\n                                {title}\r\n                            </GroupLink>\r\n                        </GroupText>\r\n                    )\r\n            }\r\n            {\r\n                edit\r\n                    ? (\r\n                        <>\r\n                            <SaveButton onClick={onSave}>\r\n                                <MdSave />\r\n                            </SaveButton>\r\n                            <CancelButton onClick={onCancel}>\r\n                                <MdCancel />\r\n                            </CancelButton>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <EditButton onClick={onEdit}>\r\n                                <MdEdit />\r\n                            </EditButton>\r\n                            <RemoveButton onClick={onRemove}>\r\n                                <MdDelete />\r\n                            </RemoveButton>\r\n                        </>\r\n                    )\r\n            }\r\n        </GroupItemWapper>\r\n    )\r\n}\r\n\r\nexport default GroupItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport GroupItem from './GroupItem';\r\n\r\nconst GroupListWrapper = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst GroupList = ({ groups }) => {\r\n    return (\r\n        <GroupListWrapper>\r\n            {\r\n                groups.map((group, index) => (\r\n                    <GroupItem\r\n                        key={index}\r\n                        group_id={group.id}\r\n                        title={group.title}\r\n                    />\r\n                ))\r\n            }\r\n        </GroupListWrapper>\r\n    )\r\n}\r\n\r\nexport default GroupList;","import React from 'react';\r\n\r\nconst GroupNotFound = () => {\r\n    return (\r\n        <>사용자 정보를 불러올 수 없습니다.</>\r\n    )\r\n}\r\n\r\nexport default GroupNotFound;","import React from 'react';\r\nimport { useAuthState } from '../../context/AuthContext';\r\nimport { useTodoState } from '../../context/TodoContext';\r\nimport GroupAppend from './GroupAppend';\r\nimport GroupHeader from './GroupHeader';\r\nimport GroupList from './GroupList';\r\nimport GroupNotFound from './GroupNotFound';\r\n\r\nconst GroupTemplate = () => {\r\n    const auth = useAuthState()\r\n    const groups = useTodoState().filter(group => group.uuid === auth.uuid)\r\n    return (\r\n        <>\r\n            {\r\n                groups === undefined\r\n                    ? <GroupNotFound />\r\n                    : (\r\n                        <>\r\n                            <GroupHeader />\r\n                            <GroupList groups={groups} />\r\n                            <GroupAppend />\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupTemplate;","import React, { memo, useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\n\r\nconst TodoAppendForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst TodoAppendInput = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst TodoAppendButton = styled.button`\r\n    background: #38d9a9;\r\n\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n                background: #ff6b6b;\r\n                &:hover {\r\n                    background: #ff8787;\r\n                }\r\n\r\n                &:active {\r\n                    background: #fa5252;\r\n                }\r\n\r\n                transform: translate(-50%, 50%) rotate(45deg);\r\n            `\r\n    }\r\n`;\r\n\r\nconst TodoAppend = ({ group_id }) => {\r\n    const dispatch = useTodoDispatch();\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const onAppend = (event) => {\r\n        event.preventDefault();\r\n        if (text) {\r\n            dispatch({\r\n                type: \"TODO_APPEND\",\r\n                group_id,\r\n                text\r\n            })\r\n            setText(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                open && (\r\n                    <TodoAppendForm onSubmit={onAppend}>\r\n                        <TodoAppendInput\r\n                            autoFocus\r\n                            placeholder=\"새로운 할 일 추가\"\r\n                            value={text}\r\n                            onChange={event => setText(event.target.value)}\r\n                        />\r\n                    </TodoAppendForm>\r\n                )\r\n            }\r\n            <TodoAppendButton open={open} onClick={() => setOpen(!open)}>\r\n                <MdAdd />\r\n            </TodoAppendButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TodoAppend);","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete, MdEdit, MdSave, MdCancel } from 'react-icons/md'\r\nimport { useTodoDispatch } from '../../context/TodoContext';\r\n\r\nconst RemoveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst EditButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n\r\n    display: none;\r\n`;\r\n\r\nconst SaveButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 19px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst TodoItemWapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${EditButton},\r\n        ${RemoveButton} {\r\n            display: initial;\r\n        }\r\n    }\r\n`\r\n\r\nconst TodoCheckBox = styled.div`\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `\r\n    }\r\n`;\r\n\r\nconst TodoText = styled.div`\r\n    flex: 1;\r\n    font-size: 16px;\r\n    color: #495057;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            color: #ced4da;\r\n        `\r\n    }\r\n`;\r\n\r\nconst TodoForm = styled.form`\r\n    flex: 1; \r\n`\r\n\r\nconst TodoInput = styled.input`\r\n    width: 100%;\r\n    font-size: 16px;\r\n    color: #495057;\r\n`;\r\n\r\nconst TodoItem = ({ group_id, todo_id, text, done }) => {\r\n\r\n    const dispatch = useTodoDispatch();\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [editText, setEditText] = useState(text);\r\n\r\n    const onCheck = () => dispatch({ type: \"TODO_CHECK\", group_id, todo_id })\r\n    const onTextChange = (event) => setEditText(event.target.value)\r\n\r\n    const onEdit = () => setEdit(true);\r\n    const onRemove = () => dispatch({ type: \"TODO_REMOVE\", group_id, todo_id })\r\n    const onSave = (event) => {\r\n        event.preventDefault();\r\n        // dispatch({ type: \"EDIT_TODO\", group_id, todo_id, editText })\r\n        setEdit(false);\r\n    }\r\n    const onCancel = () => {\r\n        setEditText(text);\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <TodoItemWapper>\r\n            <TodoCheckBox done={done} onClick={onCheck}>\r\n                {done && <MdDone />}\r\n            </TodoCheckBox>\r\n            {\r\n                edit\r\n                    ? (\r\n                        <TodoForm onSubmit={onSave}>\r\n                            <TodoInput type=\"text\" value={editText} onChange={onTextChange} />\r\n                        </TodoForm>\r\n                    )\r\n                    : <TodoText done={done}>{text}</TodoText>\r\n\r\n            }\r\n            {\r\n                edit\r\n                    ? (\r\n                        <>\r\n                            <SaveButton onClick={onSave}>\r\n                                <MdSave />\r\n                            </SaveButton>\r\n                            <CancelButton onClick={onCancel}>\r\n                                <MdCancel />\r\n                            </CancelButton>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <EditButton onClick={onEdit}>\r\n                                <MdEdit />\r\n                            </EditButton>\r\n                            <RemoveButton onClick={onRemove}>\r\n                                <MdDelete />\r\n                            </RemoveButton>\r\n                        </>\r\n                    )\r\n            }\r\n        </TodoItemWapper>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nconst TodoListWrapper = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst TodoList = ({ group_id, todos }) => {\r\n    return (\r\n        <TodoListWrapper>\r\n            {\r\n                todos.map((todo, index) => (\r\n                    <TodoItem\r\n                        key={index}\r\n                        group_id={group_id}\r\n                        todo_id={todo.id}\r\n                        text={todo.text}\r\n                        done={todo.done}\r\n                    />\r\n                ))\r\n            }\r\n        </TodoListWrapper>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst TodoNotFound = () => {\r\n    return (\r\n        <>요청하신 페이지를 찾을 수 없습니다.</>\r\n    )\r\n}\r\n\r\nexport default TodoNotFound\r\n","import React from 'react';\r\nimport { MdArrowBack } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTitleWrapper = styled.div`\r\npadding-top: 24px;\r\npadding-left: 20px;\r\npadding-right: 32px;\r\npadding-bottom: 24px;\r\nborder-bottom: 1px solid #e9ecef;\r\n\r\nh1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n}\r\n.day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n}\r\n.tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n}\r\n\r\ndisplay: flex;\r\n`\r\nconst BackLink = styled(Link)`\r\n`\r\n\r\nconst TodoTitle = ({ title }) => {\r\n    return (\r\n        <TodoTitleWrapper>\r\n\r\n            <BackLink to=\"/todo/groups/\">\r\n                <MdArrowBack />\r\n            </BackLink>\r\n\r\n            <h1>{title}</h1>\r\n        </TodoTitleWrapper>\r\n    )\r\n}\r\n\r\nexport default TodoTitle","import React from 'react';\r\nimport TodoAppend from './TodoAppend';\r\nimport { useTodoState } from '../../context/TodoContext';\r\nimport TodoList from './TodoList';\r\nimport TodoNotFound from './TodoNotFound';\r\nimport TodoTitle from './TodoTitle';\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst TodoTemplate = ({ location }) => {\r\n    const query = queryString.parse(location.search);\r\n    const group_id = query.group_id;\r\n    const group = useTodoState().filter(group => group.id === group_id)[0];\r\n    return (\r\n        <>\r\n            {\r\n                group === undefined\r\n                    ? <TodoNotFound />\r\n                    : (\r\n                        <>\r\n                            <TodoTitle title={group.title} />\r\n                            <TodoList group_id={group_id} todos={group.todos} />\r\n                            <TodoAppend group_id={group_id} />\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport GroupTemplate from '../components/Group/GroupTemplate';\r\nimport { useTodoDispatch } from '../context/TodoContext';\r\nimport TodoTemplate from '../components/Todo/TodoTemplate';\r\nimport { getTodosFromGoogleSheet } from '../util/google.sheets';\r\nimport { useAuthState } from '../context/AuthContext';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 768px;\r\n    height: 768px;\r\n\r\n    position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 15px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst TodoRoute = () => {\r\n    const auth = useAuthState();\r\n    const [init, setInit] = useState(false);\r\n    const dispatch = useTodoDispatch();\r\n\r\n    useEffect(() => {\r\n        const Init = async () => {\r\n            if (auth !== null) {\r\n                setInit(false);\r\n                await getTodosFromGoogleSheet(auth.uuid)\r\n                    .then((groups) => {\r\n                        dispatch({ type: \"INIT\", groups });\r\n                    })\r\n                    .catch((error) => console.log(error))\r\n                setInit(true);\r\n            }\r\n        }\r\n        Init(auth);\r\n    }, [dispatch, auth])\r\n\r\n    if (auth === null) {\r\n        return <Redirect exact={true} to='/auth/login/' />\r\n    } else {\r\n        return (\r\n            <Wrapper>\r\n                {\r\n                    !init\r\n                        ? <>로딩 중...</>\r\n                        :\r\n                        <Switch>\r\n                            <Route exact={true} path=\"/todo/groups/\" component={GroupTemplate} />\r\n                            <Route path=\"/todo/\" component={TodoTemplate} />\r\n                        </Switch>\r\n                }\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoRoute;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Footer from \"./components/Common/Footer\";\nimport Header from \"./components/Common/Header\";\nimport Home from './components/Common/Home';\nimport Page404 from './components/Common/Page404';\nimport { useAuthState } from './context/AuthContext';\nimport AuthRoute from './routes/AuthRoute';\nimport TodoRoute from './routes/TodoRoute';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`\n\nconst App = () => {\n  const auth = useAuthState();\n  return (\n    <>\n      <GlobalStyle />\n      <Header auth={auth} />\n      <Switch>\n        <Route exact={true} path=\"/\" component={Home} />\n        <Route path=\"/auth/\" component={AuthRoute} />\n        <Route path=\"/todo/\" component={TodoRoute} />\n        <Route path=\"/\" component={Page404} />\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport { TodoProvider } from './context/TodoContext';\nimport './index.css'\n\nReactDOM.render(\n  <HashRouter>\n    <AuthProvider>\n      <TodoProvider>\n        <App />\n      </TodoProvider>\n    </AuthProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}